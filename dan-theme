<!DOCTYPE html>
<html lang="en">
   <head>
    <meta charset="UTF-8">
    <title>{Title}{block:SearchPage} ({lang:Search results for SearchQuery}){/block:SearchPage}{block:PermalinkPage}{block:PostSummary} — {PostSummary}{/block:PostSummary}{/block:PermalinkPage}</title>{block:Description}<meta name="description" content="{MetaDescription}">{/block:Description}
    <meta name="keywords" content="danisnotonfire, dan howell"/>
    <meta name="author" content="Jana S.">
    <link rel="alternate" type="application/rss+xml" title="RSS" href="{RSS}">
    <link rel="alternate" href="android-app://com.tumblr/tumblr/x-callback-url/blog?blogName=danisnotonfire"/>
    <link rel="alternate" href="ios-app://305343404/tumblr/x-callback-url/blog?blogName=danisnotonfire"/>
    <link rel="shortcut icon" href="{Favicon}">
    <meta name="viewport" content="width=device-width">
    <meta name="if:Make Bio Smaller" content=""/>
    <meta name="if:Make Bio Align Left" content=""/>
    <meta name="if:Hide Eclipse Puzzle" content=""/>
    <meta name="image:Cover" content="http://i.imgur.com/MAB1kl6.jpg"/>
    <meta name="image:Avatar" content=""/>
    <meta name="if:Show Archive Link" content=""/>
    <meta name="if:Show Random Link" content=""/>
    <meta name="if:Infinite Scrolling" content=""/>
    <meta name="text:Ask Link Title" content=""/>
    <meta name="text:Submit Link Title" content=""/>
    <meta name="text:Archive Link Title" content=""/>
    <link href='http://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400italic,600|Questrial|Libre+Baskerville' rel='stylesheet' type='text/css'>
       
    <!--PLACEMENT NEEDS TO BE HERE FOR SCROLL TO WORK ON PERMALINK PAGE this is the SCRIPT FOR TAGS REVEAL-->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
 
       
        <!--styles-->
        <style type="text/css">

            /* Custom Reset */
            html, body, figure, h1, h2, h3, h4, h5, h6, blockquote, ol, ul, dl {
                margin: 0;
                padding: 0;
                font: inherit;
            }

            b, strong, i, em, mark, del, ins, code {
                color: #969696;
            }
            /* end of Custom Reset */
            
            body {
                opacity:1;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-size: 13px;
                line-height: 16px;
                max-width: 100%;
                overflow-x: hidden;
                transition-timing-function: ease-out;
                -webkit-transition: .25s opacity;
                -moz-transition: .25s opacity;
                transition: .25s opacity;
            }

            ::selection {
                background: #b4b3b3;
                color: #ffffff;
                text-shadow: none;
            }

            *, *:before, *:after {-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}

            .background-art {
                position:fixed;
                width: 100%;
                height: 100vh;
                background-image: url("http://i.imgur.com/fLiZ4sc.jpg");
                height: 100vh;
                background-size: cover;
                background-attachment: fixed;
                opacity: .25;
            }
            
            .container {
                height: 100%;
                width: 100%;
                margin: auto auto;
            }

            .clearfix:after {
                content: "";
                display: table;
                clear: both;
            }

            .about {
                background-color: #000000;
                color: #e3e3e3;
                min-height: 100vh;
                padding: 12em 20px 20px 20px;
                position: fixed;
                z-index: 85;
            }

            .hide-smtitle {
                top: 0;
                height: 8.7em;
                position: absolute;
                opacity: 1;
                z-index: 98;
            }

            .blk-background {
                background-color: black;
            }

            .smtitle-area {
                top: 0;
                height: 8.7em;
                position: fixed;
                z-index: 95;
            }

            .smtitle {
                position: relative;
                bottom: -73px;
                font-size: 32.6px;
                text-align: center;
                padding-right: .25px;
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
                font-family: 'Libre Baskerville', serif;
                color: #ffffff;
                text-shadow: -1.5px 0.5px 0px rgba(127, 127, 127, 1);
            }

            .smtitle a {
                display: none;
                color: #e1e1e1;
                z-index: 95;
            }

            .smtitle a:hover {
                color: #e1e1e1;
                -webkit-transition: all 0.3s linear;
                -moz-transition: all 0.3s linear;
                transition: all 0.3s linear;
                text-decoration: none;
            }

            .col {
                float: left;
            }

            .side {
                width: 256.75px;
            }

            #contentbar-right {
                position: fixed;
                z-index: 90;
                top:0;
                right:0;
                width: 256.75px;
                min-height: 100vh;
                background-color: #000000;
                background-size: cover;
            }

            #text-right {
                position: absolute;
                z-index: 95;
                top: 0;
                left: 0;
                width: 100%;
                min-height: 100vh;
            }

            #avatar {
                border-top: black solid .25px;
                /*border: grey solid 1px;*/
                -webkit-user-select: none;
        	}

            #sidebar #avatar #portrait {
                position: absolute;
                width: 100%;
                z-index: 95;
            }
            
            #default_avatar {
                width: 100%;
            }

            .description-social {
                {block:ifhideeclipsepuzzle}
 				z-index: 100 !important;
 				position: relative !important;
 			    {/block:ifhideeclipsepuzzle};
                position: absolute;
                left: 50.25%;
                transform: translate(-50%);
                width: 100%;
            }

            p#description {
                color: white;
                {block:ifmakebiosmaller}
            	font-size: 13px !important;
                line-height: 19.75px !important;
                {/block:ifmakebiosmaller};
                font-size: 17.85px;
                line-height: 24.6px;
                {block:ifmakebioalignleft}
                text-align: left !important;
                margin-right: 0px !important;
                {/block:ifmakebioalignleft};
                text-align: center;
                margin-right: 1px;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-weight: 300;
                margin-top: 13.25px;
                margin-bottom: 13.25px;
        	}

        	#sidebar a {
                color: white;
                font-weight: 600;
                text-decoration: none;
                cursor: auto;
                -webkit-transition: all 0.3s linear;
                -moz-transition: all 0.3s linear;
                transition: all 0.3s linear;
            }

            p#disclaimer {
                opacity:0;
                position: absolute;
                color: #a0a0a0;
                top: 10px;
                margin: 0 18px;
                font-weight: 600;
                font-size: 6.5px;
                line-height: 9px;
            }

            .action-area {
                margin-left: 0;
                width: 100%;
                min-height: 100vh;
                padding: 0;
                float: left;
            }

            a {
                color: #a0a0a0;
                text-decoration: none;
            }

            a:hover {
                color: #79b5f8;
                cursor: pointer;
            }

            a:active {
                outline: none;
            }

            a:focus {
                -moz-outline-style: none;
            }

            #title {
                position: absolute;
                text-align: center;
                top: 0;
                left: 0;
                width: 100%;
                z-index: 95;
                text-decoration: none;
            }

            .site-title {
                top: 31px;
                position: relative;
                margin-left: 0;
                font-size: 3em;
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
                font-family: 'Libre Baskerville', serif;
                /* 3D effect */
                text-shadow: -1.5px 0.5px 1px rgba(127, 127, 127, 0.5);
            }

            .site-title a {
                color: #000000;
                z-index: 95;
                -webkit-transition: all 0.23s linear;
                -moz-transition: all 0.23s linear;
                transition: all 0.23s linear;
            }

            .site-title a:hover {
                color: #000000;
                opacity: .74;
            }
            
            ::-webkit-scrollbar{
                height:15px;
                width:7px;
                background:#fff;
            }

            ::-webkit-scrollbar-thumb {background:#000000;border:1.25px solid #ffffff;}
               
            /*style for top right tumblr controls*/
            .tmblr-iframe {
                right:-13.5px!important;
                transform:scale(0.9,0.9);
                top: 3.25px!important;
            } 

            #topbar {
                position: absolute;
                width: 100%;
                top: 66.5px;
                padding: 0 20px 0 20px;
                text-align: center;
                z-index: 95;
            }

            #topbar li {
                display: inline-block;
                list-style-type: none;
                text-transform: uppercase;
            }

            #topbar li a {
                margin: 0 6.4px;
                letter-spacing: 1.75px;
                font-family: 'Questrial', helvetica, arial, sans-serif;
                font-size: 12.5px;
                color: rgba(0, 0, 0, 0.5);
                text-transform: lowercase;
                text-decoration: none;
                -webkit-transition: all 0.4s linear;
                -moz-transition: all 0.4s linear;
                transition: all 0.4s linear;
            }

            #topbar li a:hover, a.more_notes_link:hover {
                color: #79b5f8;
            }

            .posts-panel {
              width: 500px;
              margin-left: auto;
              margin-right: auto;
              padding-top: 7.5em;
            }

            #posts-container a {
                -webkit-transition: all 0.45s linear;
                -moz-transition: all 0.45s linear;
                transition: all 0.45s linear;
                font-family: 'Questrial', helvetica, arial, sans-serif;
            }

            .about__content {
                position: absolute;
                z-index: 90;
                top: 7.5em;
                padding-top: 17.75px;
                bottom: 1em;
                right: 17.75px;
                width: 220px;
            }

            h1 {
                line-height:25px;
                font-weight:400;
            }
            
            .entry h1 {
                font-family: 'Questrial', helvetica, arial, sans-serif;
                font-size: 16px;
                font-style: normal;
                font-weight: 400;
                line-height: 18px;
                color: #a7a7a7;
                word-wrap: break-word;
            }

            ol.notes {
                padding: 0px;
                font-weight:normal;
                margin: 0px 0px;
                list-style-type: none !important;
                border-bottom: 0px;
                margin-left: 0px;
                text-align: left;
            }

            ul {
                list-style-type: circle;
                list-style-position: inside;
                margin: 0 0 8.875px;
            }

            ol {
                list-style-position: inside;
                margin: 0 0 8.875px;
            }

            #posts p {
                max-width: 100%;
                font-size: 11.5px;
                line-height: 15.5px;
                letter-spacing: .15px;
                word-spacing: .65px;
                -webkit-margin-before: 8.875px;
                -webkit-margin-after: 8.875px;
                -webkit-margin-start: 0px;
                -webkit-margin-end: 0px;
            }

            .entry {
                max-width: 100%;
                margin: 17.75px auto 62px;
                overflow: hidden;
                font-size: 10px;
                line-height: 14px;
                font-weight: 300;
                background-color: rgba(259, 250, 254, .3);
                box-shadow: 0.67px 0.67px 0.67px rgba(68,68,68,.05), -0.67px -0.67px 0.67px rgba(68,68,68,.05), -0.67px 0.67px 0.67px rgba(68,68,68,.05), 0.67px -0.67px 0.67px rgba(68,68,68,.05);
            }

            .entry a:hover {
                -webkit-transition: all 0.3s linear;
                -moz-transition: all 0.3s linear;
                transition: all 0.3s linear;
            }

            blockquote {
                max-width: 100%;
                margin: 0 0 8.875px;
                padding-left: 17.75px;
                padding-right: 7.75px;
                border-left: 1px solid #eaeaea;
            }

            .entry .media {
                width:100%;
            }

            .entry .media iframe {
                display: block;
                width: 100%;
                -webkit-user-select: none;
            }

            .entry .media iframe.vine-embed {
                display: block;
                width: 500px;
                height: auto !important;
            }

            .entry .photo {
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }

            .entry .photo img {
                display: block;
                width: 100%;
            }

            .entry figure, .entry iframe {
                display: block;
                margin-left: auto;
                margin-right: auto;
                max-width: 100%;
            }

            .entry figure img {
                max-width:100%;
                height:auto !important;
            }

            .entry .captions {
                margin-top: 17.75px;
                padding-left: 17.75px;
            }

            .entry .details {
                padding: 8.875px;
                letter-spacing: .75px;
                font-size: 10.75px;
                text-align: center;
                text-transform: uppercase;
                box-shadow: .67px .67px .67px rgba(68,68,68,0), -.67px -.67px .67px rgba(68,68,68,.05), -.67px .67px .67px rgba(68,68,68,0), .67px -.67px .67px rgba(68,68,68,.05);
            }
            
            .entry .details a {
                margin: 0 5px;
            }

            .details a:first-child:hover, .details a:nth-child(2):hover {
                color: #79b5f8;
                {block:permalinkpage}
                color: #a0a0a0;
                cursor: text;
                {/block:permalinkpage}
            }

            .details a:nth-child(3):hover, .details a:nth-child(4):hover, .details a:nth-child(5):hover, .details a:nth-child(6):hover {
                color: #79b5f8;
            }
            
            .togglet:hover {
                color: #000000 !important;
            }

            .entry .details .tags {
                display:none;
            }

            .entry .details .tags a {
                margin: 0 3.2px;
                -webkit-transition: all 0.4s linear;
                -moz-transition: all 0.4s linear;
                transition: all 0.4s linear;
                font-size: 9.8px;
                letter-spacing: .5px;
                font-style: italic;
                text-transform: lowercase;
                color: #a0a0a0;
            }

            .entry .details .tags a:hover {
                color: #79b5f8;
                cursor: pointer;
            }

            article {
                position: relative;
            }
            
            article section {
                position: absolute;
                bottom: 0;
                height: 32.25px;
                padding: .0001px;
                opacity: 0;
                -webkit-transition: all 0.3s ease;
                -moz-transition: all 0.3s ease;
                transition: all 0.3s ease;
            }
            
            article section#leftbutton {
                left: -17px;
            }
            
            article section#rightbutton {
                right: -17px;
            }
            
            article:hover section {
                opacity: 1;
                -webkit-transition: all 0.3s ease;
                -moz-transition: all 0.3s ease;
                transition: all 0.3s ease;   
            }
            
            article:hover section#leftbutton {
                left: 17px;
            }
            
            article:hover section#rightbutton {
                right: 17px;
            }

            .entry .button {
                width: 11.25px;
                transform: translate(0, 65.25%);
                font-size: 0px;
                text-align: left;
                border: transparent solid .25px;
            }

            .entry .button:hover {
                cursor: default;
            }
          
            .entry .button a {
                margin: 0;
                fill: #727272;
            }
            
            section#rightbutton a {
                fill: rgba(259, 250, 254, 0);
            }
            
            section#rightbutton a #heartoutline {
                stroke: #727272;
                z-index: 5;
            }
            
            section#leftbutton a:hover {
                fill: #79b5f8;
            }
            
            section#rightbutton a:hover {
                fill: #000000;
            }
        
            .button .like .liked + svg {
                opacity:1;
            }
            
            .button .like .liked + svg path#heartoutline {
                opacity: 0;
            }
            
            .button .like .liked + svg path#mainheart {
                fill: #000000;
                stroke: #000000;
               -webkit-transition: all 0.25s linear;
               -moz-transition: all 0.25s linear;
                transition: all 0.25s linear;
                z-index:100;
            }

            .button .like .like_button iframe {
                position:absolute;
                height: 13.5px;
                z-index:2;
                opacity:0;
            }
        
            .button svg:not(:root):hover {
                cursor: pointer;
            }

            .entry .read_more_container a {
                display:inline-block;
                margin:0 10px 10px 0;
                padding:5px 10px;
                text-transform:lowercase;
                font-size:.95em;
                color:{color:Post Title};
                background:rgba({RGBcolor:Post Text},.1);
            }

            .entry .read_more_container a:first-letter {
                text-transform:uppercase
            }

            .entry .read_more_container a:after {
                content:"»";
                vertical-align:1px;
                margin:0 0 0 10px
            }

            .entry .text .question {
                min-height: 60px;
                padding: 10.8px 14.5px 14.5px 15.7px;
                -moz-filter: invert(8.3%);
                -ms-filter: invert(8.3%);
                -webkit-filter: invert(8.3%);
                filter: invert(8.3%);
                background: rgba(255, 255, 255, 0.069);
            }

            .question div:first-child {
                color: #a0a0a0;
                font-family: 'Questrial', helvetica, arial, sans-serif;
                -webkit-transition: all 0.25s linear;
                -moz-transition: all 0.25s linear;
                transition: all 0.25s linear;
            }

            .question h4 {
                max-width: 100%;
                font-size: 12.8px;
                line-height: 15.5px;
                font-weight: 600;
                letter-spacing: .125px;
                word-spacing: .45px;
                margin-left: 31px;
                color: rgba(0,0,0,.3);
            }

            .entry .text .answer {
                position: relative;
                max-width: 91%;
                margin-bottom: 7.5px;
            }

            .answer h5 {
                margin-left: 20px;
            }

            .answer blockquote p:first-child {
                padding-top: 0;
            }

            .entry .text .a-box  {
                position: absolute;
                top: .5px;
                left: -.75px;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-size: 26px;
                font-weight: 600;
                color: rgba(0,0,0,.08);
                z-index: 1;
            }

            .q-box {
                position: absolute;
                top: 21.25px;
                left: 14.75px;
                font-size: 39px;
                font-weight: 600;
                color: rgba(255,255,255,1);
            }

            .entry .text .odd,
            .entry .text .even {
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-weight: 300;
                padding: 0, 15px;
            }

            .entry .text a.link {
                font-size: 17px;
                line-height: 19px;
                text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.1);
            }

            .quote h3 {
                text-indent: -10.5px;
                margin-left: 22px;
                margin-right: 19px;
                font-family: 'Questrial', helvetica, arial, sans-serif;
                font-size: 16px;
                line-height: 18px;
                color: #a0a0a0;
            }

            .quote h3:before {
                content: "\201C";
                font-family: helvetica, arial, sans-serif;
                font-size: 17px;
                margin-right: 2px;
            }

            .quote h3:after {
                content: "\201D";
                font-family: helvetica, arial, sans-serif;
                font-size: 17px;
                margin-left: 2px;
            }

            div.quote-source {
                margin: 0 17.75px 8.875px 0;
                text-align: right;
                font-size: 11.5px;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-weight: 300;
                line-height: 15.5px;
                letter-spacing: .15px;
                word-spacing: .65px;
                color: #a0a0a0;
            }
            
            a.source:before {
                content: "\f079";
            }

            .source a {
                font-size: 10px;
                font-weight: 600;
                -webkit-transition: all 0.3s linear;
                -moz-transition: all 0.3s linear;
                transition: all 0.3s linear;
                z-index: 5;
            }

            .details a:first child {
                margin-top: 5px;
            }

            a.tumblr_blog {
                font-size: 11.2px;
                font-weight: 700;
                letter-spacing: .425px;
            }

            a.tumblr_blog:hover {
                -webkit-transition: all 0.3s linear;
                -moz-transition: all 0.3s linear;
                transition: all 0.3s linear;
                color: #79b5f8;
            }



            /*  pagination  */

            #pagination {
                margin: auto;
                padding: 0 0 37.75px;
                letter-spacing: 1.75px;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-size: 11.5px;
                font-weight: 600;
                color: #a0a0a0;
                text-transform: uppercase;
                text-decoration: none;
            }

            #pagination:after {
                content:"";
                display: block;
                height:0;
                clear:both
            }

            #pagination a {
                position:absolute;
                display:inline-block;
                opacity:.3
            }

            #pagination a.exist {
                opacity:1
            }

            #pagination a#newer {
                left:-13.5px;
            }

            #pagination a#older {
                right:-13.5px;
            }

            #pagination a#newer:before {
                content:"\2190";
                margin:0 15px 0 0
            }

            #pagination a#older:after {
                content:"\2192";
                margin:0 0 0 15px
            }

            /*  end of pagination   */



            /*  permalink   */
     
            #permalink .permalink-box,
            #permalink .entry {
                display:block;
                width:100% !important;
                height:auto !important;
                margin-bottom: 13px;
                color: #1d1d1d;
            }

            #permalink .permalink-box h2 {
                margin:0 0 17.75px;
            }

            #permalink .permalink-box ol.notes {
                font-size: 9px;
                line-height: 0px;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-weight: 300;
                list-style-type:none;
            }

            #permalink .permalink-box ol.notes li.note {
                padding: 4.5px 0;
            }

            #permalink .permalink-box ol.notes li.more_notes_link_container,
            #permalink .permalink-box ol.notes li.more_notes_link_container a.more_notes_link, #pagination {
                letter-spacing: 1.75px;
                font-family: 'Questrial', helvetica, arial, sans-serif;
                font-size: 12.5px;
                color: rgba(0, 0, 0, 0.5);
                text-transform: lowercase;
                text-decoration: none;
                -webkit-transition: all 0.4s linear;
                -moz-transition: all 0.4s linear;
                transition: all 0.4s linear;
                color: rgba(0, 0, 0, 0.5);
            }

            #permalink .permalink-box ol.notes img {
                display:inline;
                padding:0 5px 0 0;
                margin-bottom: -4.51px;
            }

            #permalink .permalink-box ol.notes li.more_notes_link_container {
                margin: 9.5px 0 26px 0;
            }

            span.action {
                color: #1d1d1d;
                font-size: 11px;
                line-height: 17px;
            }

            span.action a {
                color: #a0a0a0;
                font-size: 10.5px;
                letter-spacing: .2px;
                -webkit-transition: all 0.3s linear;
                -moz-transition: all 0.3s linear;
                transition: all 0.3s linear;
            }

            span.action a:hover, #pagination a:hover, #sidebar a:hover {
                color: #79b5f8;
                cursor:pointer;
                -webkit-transition: all 0.3s linear;
                -moz-transition: all 0.3s linear;
                transition: all 0.3s linear;
            }
            
            ol.notes blockquote {
                margin-left: 17.75px;
                font-size: 10px;
                line-height: 14px;
            }

            /*infinite scroll loading image*/
            #infscr-loading img {
                display: none;
            }

            .social-container {
                position: relative;
                left: 49.75%;
                transform: translate(-50%);
                width: 51%;
                {block:ifhideeclipsepuzzle}
 				margin-bottom: 70px !important;
 			    {/block:ifhideeclipsepuzzle};
            }

            .social-follow-item {
                float: left;
                width: 25%;
            }

            .social-follow-item svg {
                width: 100%;
                height: auto;
                padding: 10%;
            }

            a svg #circle {
                fill: #000000;
                stroke: #ffffff;
                -webkit-transition: all 0.27s linear;
                -moz-transition: all 0.27s linear;
                transition: all 0.27s linear;
            }

            a svg #toparrow, a svg #bottomarrow {
                fill: #a0a0a0;
                -webkit-transition: all 0.3s linear;
                -moz-transition: all 0.3s linear;
                transition: all 0.3s linear;
            }

            a svg:hover #circle, a svg:hover #toparrow, a svg:hover #bottomarrow {
                fill: #79b5f8;
                stroke: #79b5f8;
            }
            
            a svg:hover #icon {
                fill: #000000;
                -webkit-transition: all 0.25s linear;
                -moz-transition: all 0.25s linear;
                transition: all 0.25s linear;
            }
            
            a svg:hover #icon-static {
                opacity: 1;
                -webkit-transition: all 0.25s linear;
                -moz-transition: all 0.25s linear;
                transition: all 0.25s linear;
            }
            
            a svg:hover #icon-static {
                opacity: 0;
            }

            .hover-on-me-eclipse {
                display: block;
                opacity: 1;
                z-index: 110;
                position: absolute;
                top: 12px;
                display: block;
                border: 1px solid transparent;
                background-color: black;
                padding: 2px 2px 5px;
                -webkit-transition: all 0s linear;-moz-transition: all 0s linear;transition: all 0s linear;
            }

            .docum-ready-cover {
                {block:ifhideeclipsepuzzle}
 				display: none !important;
 			    {/block:ifhideeclipsepuzzle};
                display: block;
                opacity: 1;
                z-index: 250;
                position: absolute;
                top: 361px;
                left: 50%;
                transform: translate(-50%);
                border: 1px solid transparent;
                background-color: black;
                padding: 2px 2px 5px;
                cursor: default;
                -webkit-user-select: none;
            }

            #play-video {
                {block:ifhideeclipsepuzzle}
         	    display: none !important;
         	    {/block:ifhideeclipsepuzzle};
                opacity: 0;
                display: block;
                position: absolute;
                top: 368px;
                left: 50%;
                transform: translate(-50%);
                width: 122px;
                height: 119.5px;
                overflow: hidden;
                z-index: 140;
            }

            #play-video:hover {
                cursor: help !important;
            }

            #video {
                {block:ifhideeclipsepuzzle}
 	            display: none !important;
 	            {/block:ifhideeclipsepuzzle};
                opacity: 0;
                position: absolute;
                top: 368px;
                left: 50%;
                transform: translate(-50%);
                width: 122px;
                height: 119.5px;
                overflow: hidden;
                z-index: 135;
            }

            .absolute {
                opacity: 1;
                position: absolute;
                left: 50%;
                width: 119px;
                height: 115px;
                top: 12px;
                transform: translate(-50%, -5%);
                z-index: 90;
                margin: 0;
                padding: 0;
                }

            .eclipse_disappear {
                opacity: 0;
                z-index: -5;
            }

            .eclipse_picture {
                {block:ifhideeclipsepuzzle}
 	            display: none !important;
 	            {/block:ifhideeclipsepuzzle};
                display: block;
                position: absolute;
                top: 361px;
                left: 50%;
                transform: translate(-50%);
                display: block;
                border: 1px solid transparent;
                background-color: black;
                padding: 2px 58px 5px;
                -webkit-transition: all 2.5s linear;
                -moz-transition: all 2.5s linear;
                transition: all 2.5s linear;
        	}

            .static-eclipse {
                {block:ifhideeclipsepuzzle}
               	top: 0 !important;
 				padding-top: 0 !important;
 				display: block !important;
 			  {/block:ifhideeclipsepuzzle};
                display: none;
                -webkit-user-select: none;
            }

            .static-eclipse_picture {
                {block:ifhideeclipsepuzzle}
                position: relative !important;
                left: 48.5% !important;
                transform: translate(-48.25%) !important;
                width: 57.4% !important;
                {/block:ifhideeclipsepuzzle};
            }

            .static-eclipse_picture img {
                {block:ifhideeclipsepuzzle}
                width: 100% !important;
                {/block:ifhideeclipsepuzzle};
            }

            .mog_gifs {
                {block:ifhideeclipsepuzzle}
 	            display: none !important;
 	            {/block:ifhideeclipsepuzzle};
                display: block;
                position: absolute;
                width: 234px;
                left: 50.45%;
                transform: translate(-50%);
                top: 374px;
                z-index: -5;
                opacity: 0;
                -webkit-transition: all 2.5s linear;
                -moz-transition: all 2.5s linear;
                transition: all 2.5s linear;
        	}

            .mog_gifs a {
                cursor: pointer;
            }

            .show_gifs {
                z-index: 90;
                opacity: 1;
            }

            .mog_container {
                float: left;
                width: 33.333333333%;
            }

            .mog_container img {
                width: 100%;
                padding: 4.375px;
                -webkit-transition: all 2.5s linear;
                -moz-transition: all 2.5s linear;
                transition: all 2.5s linear;
            }

            .mog_container img:hover {
                cursor: pointer;
            }

            .entry .text {
                position: relative;
                margin: 17.75px 17.75px 0 17.75px;
            }

            .entry .text h2:first-child {
                font-family: 'Questrial', helvetica, arial, sans-serif;
                font-size: 18.75px;
                font-style: normal;
                font-weight: 400;
                line-height: 22px;
                margin-top: -3px;
                padding-bottom: 5px;
                color: #838383;
                word-wrap: break-word;
            }

             p.japanese {
                position: fixed;
                font-size: 17px;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-weight: 400;
                line-height: 19px;
                width: 20px;
                word-wrap: break-word;
                margin-top: 6.65em;
                margin-left: -195.75px;
                opacity: 0;
                color: #bfbfbf;
            }

            p.japanese_large {
                position: absolute;
                margin: 0;
                top: 3.35em;
                left: 114px;
                font-size: 32px;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-weight: 700;
                line-height: 40px;
                width: 20px;
                word-wrap: break-word;
                opacity: 1;
                z-index: 95;
                color: #ffffff;
                /* 3D effect */
                text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.25);
            }

            p.japanese:hover, p.japanese_large:hover {
                cursor: vertical-text;
            }

            .ascend {
                display: none;
                padding: 5px 10px;
                font-family: 'Source Sans Pro', helvetica, arial, sans-serif;
                font-size: 11.5px;
                text-transform: uppercase;
                border-radius: 100px;
                -webkit-transition: all 0.4s linear;
                -moz-transition: all 0.4s linear;
                transition: all 0.4s linear;
            }
            
            .ascend:hover {
                cursor: pointer;
                background-color: #79b5f8;  
            }

            .ascend#lg-screen {
                opacity: 1;
                position: fixed;
                bottom: 17px;
                right: 276px;
                margin: 0;
                color: #bdbdbd;
                border: #d2d2d2 solid 1px;
                z-index: 95;
            }
            
            .ascend#lg-screen:hover {
                color: #ffffff;
                border-color: #79b5f8;
            }

            .ascend#sm-screen {
                opacity: 0;
                position: absolute;
                bottom: 4px;
                left: 50%;
                transform: translate(-50%);
                color: #ffffff;
                border: solid 1.25px;
	            z-index: -100;
            }
            
            .ascend#sm-screen:hover {
                color: #000000;
                border-color: #79b5f8;
                font-weight: 600;
            }
 
            .ascend_scrolling {
                color: #79b5f8;
                background-color:rgba(255,255,255,0);
                -webkit-transition: all 0.2s linear;
                -moz-transition: all 0.2s linear;
                transition: all 0.2s linear;
            }

            .hide {
                display: none;
            }

            h2 {
                font-family: 'Questrial', helvetica, arial, sans-serif;
                font-size: 18.75px;
                font-style: normal;
                font-weight: 400;
                line-height: 22px;
                color: #a7a7a7;
                word-wrap: break-word;
            }
            
            .entry h2, h3, h4, h5, h6 {
                font-family: 'Questrial', helvetica, arial, sans-serif;
                font-size: 14px;
                font-style: normal;
                font-weight: 400;
                line-height: 17px;
                color: #a7a7a7;
                word-wrap: break-word;
            }

            #ask_form, #submit_form {
                margin-top: 10px;
                margin-bottom: 17.75px;
            }

            .details a:first-child, .details a:nth-child(2); {
                color: #c7c7c7;
            }

            .tumblrAutoPager_page_info, .tumblrAutoPager_page_separator {
                display: none;
            }

            .bind {
                position: relative;
                width: auto;
                height: auto;
                margin-left: auto;
                margin-right: auto;
            }

            <!--/*  PUZZLE PLUGIN STYLE  */-->
            <!--/* outermost element which holds the full puzzle interface */-->
            .jqPuzzle {
                {block:ifhideeclipsepuzzle}
                display: none !important;
                {/block:ifhideeclipsepuzzle};
                position: absolute;
                top: 349.25px;
                left: 50%;
                transform: translate(-50%);
                margin: 12px auto 11.5px;
                border: 1px solid black;
                background-color: #3e3e3e;
                font-family: Verdana, Arial, Helvetica, sans-serif;
                z-index: 150;
                cursor: default;
                -webkit-user-select: none;
            }

            <!--/* only needed if external css rules set defaults for divs,-->
            <!--   this rule only resets the most common properties */-->
            .jqPuzzle div {
                background-color: transparent;
                margin: 0px;
                padding: 0px;
                border-style: none;
                z-index: 150;
            }

            <!--/* div wrapper which holds the puzzle pieces and the solution image */-->
            .jqPuzzle .jqp-wrapper {
                padding: 2px 2px 20px;
                background-color: #222222;
                z-index: 150;
            }

            .jqp-wrapper {
                z-index: 150;
            }

            <!--/* a single puzzle piece */-->
            .jqPuzzle .jqp-piece {
                color: transparent;
                font-size: 36px;
                opacity: .8;
                z-index: 150;
            }

            .remove-slow-shuffle {
            }

            .jqPuzzle .jqp-piece:hover {
                opacity: 1;
            }

            <!--/* the controls area which holds the buttons and the display */-->
            .jqPuzzle .jqp-controls {
                opacity: 0;
            }

            <!--/* a button */-->
            .jqPuzzle .jqp-controls a {
                background-color: #3e3e3e;
                color: #3e3e3e;
                font-size: 106px;
                line-height: normal;
                border: transparent solid 1px;
                cursor: default;
                -webkit-user-select: none;
            }

            .jqPuzzle .jqp-controls a:hover {
                cursor: default;
            }

            <!--/* toggle/down state for buttons */-->
            .jqPuzzle .jqp-controls a.jqp-toggle,
            .jqPuzzle .jqp-controls a.jqp-down {
                padding-left: 4px;
                padding-right: 6px;
                border-style: inset;
                background-color: #3e3e3e;
            }

            <!--/* disabled state for buttons */-->
            .jqPuzzle .jqp-controls a.jqp-disabled {
                background-color: #3e3e3e;
                color: #3e3e3e;
            }

            <!--/* the area which holds the moves/seconds display */-->
            .jqPuzzle .jqp-controls span {
                margin-top: 5px;
                padding: 2px 4px;
                padding-left: 0px;
                border: none;
                background-color: transparent;
                color: #3e3e3e;
                font-size: 14px;
                float: left;
            }

            <!--/* disabled state for the display (non-shuffled puzzle) */-->
            .jqPuzzle .jqp-controls span.jqp-disabled {
                color: #3e3e3e;
            }

            <!--/* solved state for the display (non-shuffled puzzle) */-->
            .jqPuzzle.jqp-solved .jqp-controls span {
                padding: 1px 3px;
                border: 1px dotted transparent;
                background-color: #3e3e3e;
                color: #3e3e3e;
            }

            .jqp-solved .jqp-wrapper {
                padding: 2px 2px 20px;
                background-color: #3e3e3e;
                z-index: -300;
            }

            <!--/* a text field for the moves/seconds display */-->
            .jqPuzzle .jqp-controls span input {
                margin: 0px 3px;
                padding: 3px;
                padding-bottom: 2px;
                border-style: none;
                background-color: #3e3e3e;
                color: #3e3e3e;
                font-weight: bold;
                text-align: right;
            }

            <!--/* disabled state for the text fields */-->
            .jqPuzzle .jqp-controls span.jqp-disabled input {
                background-color: #3e3e3e;
                color: #3e3e3e;
            }

            <!--/* solved state for the text fields */-->
            .jqPuzzle.jqp-solved .jqp-controls span input {
                background-color: #3e3e3e;
                color: #3e3e3e;
            }

            .jqPuzzle.jqp-solved {
                -webkit-transition: all 0.4s linear;
                -moz-transition: all 0.4s linear;
                transition: all 0.4s linear;
                text-decoration: none;
                opacity: 0;
                z-index: -300;
            }


            <!--/* RESPONSIVE STYLES */-->
            @media screen and (max-width:1440px) {
             .about__content {
                width: auto;
                left: 17.5px;
                right: 17.5px; }

             .action-area {
                margin-left: 20%;
                width: 77.5%;}

             .site-title {
                margin-left: 20%; }

             .smtitle {
                font-size: 32.5px; }

             #topbar {
                width: 80%;
                left: 20%; }

             #contentbar-right, #text-right {
                display: none; }

             p.japanese {
                opacity: 1; }

             p.japanese_large {
                opacity: 0; }

             .bind {
                width: 820px; }

             #title {
                transform: translate(10%); }

             .posts-panel {
                transform: translate(18.5%); }

             p#description {
            	font-size: 17.85px;
                line-height: 24.75px;
                margin-right: .25px; }

             .ascend#lg-screen { 
                right: 7.75px; }
                
             ::-webkit-scrollbar-thumb {
                background:#a0a0a0; }
            }

            @media screen and (max-width:1100px) {
             .ascend#lg-screen {
                opacity: 0;
                z-index: -100; }

             .ascend#sm-screen { 
                opacity: 1;
                z-index: 100; }
            }

            @media screen and (max-width:1010px) { 
             .bind {
                width: auto; }

             .site-title {
                margin-left: 25%; }

             #title, .posts-panel {
                transform: translate(0%); }
               
             #posts {
                margin-left: auto;
                margin-right: auto; }

             #topbar {
                width: 75%;
                left: 25% }

             .entry .text .answer {
                max-width: 100%; }
               
             .side {
                width: 25%; }

             .social-container {
                width: 48%;
 				margin-bottom: 45px !important; }
               
             .description-social {
                position: relative; }

             .docum-ready-cover, .jqPuzzle, #play-video, #video, .eclipse_picture, .mog_gifs {
                display: none;
                opacity: 0; }

             .entry .text .answer {
                max-width: 100%; }
           
             .action-area {
                margin-left: 25%;
                width: 75%;
                min-height: 100vh;
                padding: 0; }

             .posts-panel {
                width: auto; }

             #posts-container {
                width: auto; }

             .entry .media iframe.vine-embed {
                width: 450px;
                height: 450px; }

             .entry .media iframe#youtube_iframe {
                height: 250px; }

             .static-eclipse {
                display: block;
                position: relative;
                opacity: 1;
                transform: none; }

             .static-eclipse_picture {
                display: block;
                position: relative;
                left: 48.25%;
                transform: translate(-48.25%);
                width: 57%;
                z-index: 90; }

             .static-eclipse_picture img {
                display: block;
                position: relative;
                width: 100%; }

             .mog_gifs {
                display: none; }

             p#description {
                font-size: 11.5px;
                line-height: 15px; }

             p#disclaimer {
                position: absolute;
                font-size: 6px;
                line-height: 8px; }

             .smtitle {
                font-size: 3.075vw; }
    
             #posts, #pagination {
                width:450px; }
            }

            @media screen and (max-width:830px) {
             p.japanese {
                opacity: 0 }
            }

            @media screen and (max-width:767px) {
             #topbar {
                width: 100%;
                top: 4.7em;
                left: 0;
                padding-top: 10%; }

             #topbar li a {
                color: #d0d0d0; }

             #title {
                width: 100%;
                padding: 9% 20%; }

             .site-title {
                margin: auto;
                color: white;
                transform: translate(-.25%);
                text-shadow: none;
                font-size: 8.4vw;
                margin-top: -7px;
                text-align: center; }

             .site-title a {
                color: white;
                -webkit-transition: none;
                -moz-transition: none;
                transition: none; }

             .site-title a:hover {
                color: #ffffff;
                opacity: 1; }

             .col {
                float: none;
                width: 100%; }

             .action-area {
                margin-left: auto;
                margin-right: auto;
                padding: 0;
                width: 100%;
                background-image: none; }

             .hide-smtitle {
                display: none;
                position: static; }

             .smtitle-area {
                display: none;
                position: static; }

             .about {
                padding-bottom: 12em;
                position: static; }

             .posts-panel {
                display: block;
                width: 100%;
                margin-left: auto;
                margin-right: auto; }

             .about__content {
                top: 10em;
                left: 20%;
                right: 20%; }

             .static-eclipse {
                opacity: 0 }

             .static-eclipse_picture {
                opacity: 0 }

             p#description {
                font-size: 13.5px;
                line-height: 16px; }

             p#disclaimer {
                font-size: 7.5px;
                line-height: 9.5px;
                margin-top: -4.5em; }

             .social-container {
                padding-top: 2.25%; }

             .mog_gifs {
                opacity: 0; }

             .entry .media iframe.vine-embed {
                width: 100%; }

             .entry .media iframe#youtube_iframe {
                height: 321px; }

             #sidebar #avatar {
                outline: none; }
            
             #posts-container {
                width:100% !important;
                padding:5%;
                margin:auto; }

             #posts, #pagination {
                width:100%;
                margin:auto !important }
            }

            {block:ifinfinitescrolling}
            #pagination{opacity:0 !important}
            #pagination a{padding:0 !important;height:0 !important}
            {/block:ifinfinitescrolling}
            #posts,#pagination{opacity:1}
            {CustomCSS}

        </style>

       
        <!--PLACEMENT NEEDS TO BE HERE IN ORDER TO WORK script is REQUIRED FOR INFINITE SCROLL-->
        <script type="text/javascript" src="http://static.tumblr.com/fsf06nd/ZoVnwwk7f/scripts.js"></script>

        <!--waypoints script for site title switch-->
        <script type="text/javascript">
            !function(){"use strict";function t(o){if(!o)throw new Error("No options passed to Waypoint constructor");if(!o.element)throw new Error("No element option passed to Waypoint constructor");if(!o.handler)throw new Error("No handler option passed to Waypoint constructor");this.key="waypoint-"+e,this.options=t.Adapter.extend({},t.defaults,o),this.element=this.options.element,this.adapter=new t.Adapter(this.element),this.callback=o.handler,this.axis=this.options.horizontal?"horizontal":"vertical",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=t.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=t.Context.findOrCreateByElement(this.options.context),t.offsetAliases[this.options.offset]&&(this.options.offset=t.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),i[this.key]=this,e+=1}var e=0,i={};t.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},t.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},t.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete i[this.key]},t.prototype.disable=function(){return this.enabled=!1,this},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},t.prototype.next=function(){return this.group.next(this)},t.prototype.previous=function(){return this.group.previous(this)},t.invokeAll=function(t){var e=[];for(var o in i)e.push(i[o]);for(var n=0,r=e.length;r>n;n++)e[n][t]()},t.destroyAll=function(){t.invokeAll("destroy")},t.disableAll=function(){t.invokeAll("disable")},t.enableAll=function(){t.invokeAll("enable")},t.refreshAll=function(){t.Context.refreshAll()},t.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},t.viewportWidth=function(){return document.documentElement.clientWidth},t.adapters=[],t.defaults={context:window,continuous:!0,enabled:!0,group:"default",horizontal:!1,offset:0},t.offsetAliases={"bottom-in-view":function(){return this.context.innerHeight()-this.adapter.outerHeight()},"right-in-view":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=t}(),function(){"use strict";function t(t){window.setTimeout(t,1e3/60)}function e(t){this.element=t,this.Adapter=n.Adapter,this.adapter=new this.Adapter(t),this.key="waypoint-context-"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,o[t.waypointContextKey]=this,i+=1,this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var i=0,o={},n=window.Waypoint,r=window.onload;e.prototype.add=function(t){var e=t.options.horizontal?"horizontal":"vertical";this.waypoints[e][t.key]=t,this.refresh()},e.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical);t&&e&&(this.adapter.off(".waypoints"),delete o[this.key])},e.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on("resize.waypoints",function(){e.didResize||(e.didResize=!0,n.requestAnimationFrame(t))})},e.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on("scroll.waypoints",function(){(!e.didScroll||n.isTouch)&&(e.didScroll=!0,n.requestAnimationFrame(t))})},e.prototype.handleResize=function(){n.Context.refreshAll()},e.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};for(var i in e){var o=e[i],n=o.newScroll>o.oldScroll,r=n?o.forward:o.backward;for(var s in this.waypoints[i]){var a=this.waypoints[i][s],l=o.oldScroll<a.triggerPoint,h=o.newScroll>=a.triggerPoint,p=l&&h,u=!l&&!h;(p||u)&&(a.queueTrigger(r),t[a.group.id]=a.group)}}for(var c in t)t[c].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.innerHeight=function(){return this.element==this.element.window?n.viewportHeight():this.adapter.innerHeight()},e.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},e.prototype.innerWidth=function(){return this.element==this.element.window?n.viewportWidth():this.adapter.innerWidth()},e.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var o=0,n=t.length;n>o;o++)t[o].destroy()},e.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),o={};this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}};for(var r in t){var s=t[r];for(var a in this.waypoints[r]){var l,h,p,u,c,d=this.waypoints[r][a],f=d.options.offset,w=d.triggerPoint,y=0,g=null==w;d.element!==d.element.window&&(y=d.adapter.offset()[s.offsetProp]),"function"==typeof f?f=f.apply(d):"string"==typeof f&&(f=parseFloat(f),d.options.offset.indexOf("%")>-1&&(f=Math.ceil(s.contextDimension*f/100))),l=s.contextScroll-s.contextOffset,d.triggerPoint=y+l-f,h=w<s.oldScroll,p=d.triggerPoint>=s.oldScroll,u=h&&p,c=!h&&!p,!g&&u?(d.queueTrigger(s.backward),o[d.group.id]=d.group):!g&&c?(d.queueTrigger(s.forward),o[d.group.id]=d.group):g&&s.oldScroll>=d.triggerPoint&&(d.queueTrigger(s.forward),o[d.group.id]=d.group)}}return n.requestAnimationFrame(function(){for(var t in o)o[t].flushTriggers()}),this},e.findOrCreateByElement=function(t){return e.findByElement(t)||new e(t)},e.refreshAll=function(){for(var t in o)o[t].refresh()},e.findByElement=function(t){return o[t.waypointContextKey]},window.onload=function(){r&&r(),e.refreshAll()},n.requestAnimationFrame=function(e){var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t;i.call(window,e)},n.Context=e}(),function(){"use strict";function t(t,e){return t.triggerPoint-e.triggerPoint}function e(t,e){return e.triggerPoint-t.triggerPoint}function i(t){this.name=t.name,this.axis=t.axis,this.id=this.name+"-"+this.axis,this.waypoints=[],this.clearTriggerQueues(),o[this.axis][this.name]=this}var o={vertical:{},horizontal:{}},n=window.Waypoint;i.prototype.add=function(t){this.waypoints.push(t)},i.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},i.prototype.flushTriggers=function(){for(var i in this.triggerQueues){var o=this.triggerQueues[i],n="up"===i||"left"===i;o.sort(n?e:t);for(var r=0,s=o.length;s>r;r+=1){var a=o[r];(a.options.continuous||r===o.length-1)&&a.trigger([i])}}this.clearTriggerQueues()},i.prototype.next=function(e){this.waypoints.sort(t);var i=n.Adapter.inArray(e,this.waypoints),o=i===this.waypoints.length-1;return o?null:this.waypoints[i+1]},i.prototype.previous=function(e){this.waypoints.sort(t);var i=n.Adapter.inArray(e,this.waypoints);return i?this.waypoints[i-1]:null},i.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},i.prototype.remove=function(t){var e=n.Adapter.inArray(t,this.waypoints);e>-1&&this.waypoints.splice(e,1)},i.prototype.first=function(){return this.waypoints[0]},i.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},i.findOrCreate=function(t){return o[t.axis][t.name]||new i(t)},n.Group=i}(),function(){"use strict";function t(t){this.$element=e(t)}var e=window.jQuery,i=window.Waypoint;e.each(["innerHeight","innerWidth","off","offset","on","outerHeight","outerWidth","scrollLeft","scrollTop"],function(e,i){t.prototype[i]=function(){var t=Array.prototype.slice.call(arguments);return this.$element[i].apply(this.$element,t)}}),e.each(["extend","inArray","isEmptyObject"],function(i,o){t[o]=e[o]}),i.adapters.push({name:"jquery",Adapter:t}),i.Adapter=t}(),function(){"use strict";function t(t){return function(){var i=[],o=arguments[0];return t.isFunction(arguments[0])&&(o=t.extend({},arguments[1]),o.handler=arguments[0]),this.each(function(){var n=t.extend({},o,{element:this});"string"==typeof n.context&&(n.context=t(this).closest(n.context)[0]),i.push(new e(n))}),i}}var e=window.Waypoint;window.jQuery&&(window.jQuery.fn.waypoint=t(window.jQuery)),window.Zepto&&(window.Zepto.fn.waypoint=t(window.Zepto))}();
        </script>

        <script type="text/javascript">
        $(function() {

            $('#topbar').waypoint(function(direction) {
                console.log('waypoint down!');
                if(direction == 'down') {
                console.log('waypoint working down!');
                    $('.site-title').fadeOut(275);
                    console.log('large title hidden');
                    $('.smtitle a').fadeIn(200);
                    console.log('title shown');
                    $('.ascend').delay(100).fadeIn(0);
                    console.log('ascend button shown');
                }
            });

            $('#posts-container').waypoint(function(direction) {
                console.log('waypoint up!');
                if(direction == 'up') {
                    $('.smtitle a').fadeOut(225);
                    console.log('title hidden');
                    $('.ascend').delay(75).fadeOut(0);
                    console.log('ascend button hidden');
                    $('.site-title').delay(75).fadeIn(235);
                    console.log('large title shown');
                }
            });

        });
        </script>

   </head>



   <body {block:permalinkpage}id="permalink" {/block:permalinkpage} class="main">
       
     <div class="background-art"></div>

      <main class="container clearfix">

         <div class="bind">

             <header id="title">
                 
                <h1 class="site-title">
                    <a href="/">{title}</a>
                </h1>

                <nav id="topbar">
                    {block:AskEnabled}
                        <li><a href="/ask" style="cursor:help">Ask</a></li>
                    {/block:AskEnabled}
                    {block:SubmissionsEnabled}
                        <li><a href="/submit" style="cursor:alias">Submit</a></li>
                    {/block:SubmissionsEnabled}
                    {block:ifshowarchivelink}
                        <li><a href="/archive">Archive</a></li>
                    {/block:ifshowarchivelink}
                    {block:ifshowrandomlink}
                        <li><a href="/random">Random</a></li>
                    {/block:ifshowrandomlink}
                    {block:HasPages}
                        {block:Pages}
                            <li><a href="{URL}" title="{Label}">{Label}</a></li>
                        {/block:Pages}
                    {/block:HasPages}
                </nav>

            </header>




            <section class="hide-smtitle col side"><p id="disclaimer">***DISCLAIMER*** This blog is not intended to impersonate Daniel Howell. I designed this theme for him to use for his own tumblr page. He'll probably never see it though and it will just continue gathering dust on tumlbr, oh well.</p>
            </section>


            <section class="smtitle-area col side">
                <h2 class="smtitle"><a href="https://www.youtube.com/danhowell" target="_blank">{title}</a></h2>
            </section>

            <section class="about col side">


                <div id="sidebar">

                    
                    <article class="about__content clearfix">

                        <div id="avatar">
                            <a href="/"><img id="portrait" src="{image:Avatar}" alt="{title}" nopin = "nopin"/><img id="default_avatar" src="http://i.imgur.com/gcmFPB5.png" alt="default avatar" nopin = "nopin"/></a>
                        </div>

                        
                    <div class="description-social">
                       {block:Description}
                       <p id="description">{Description} </p>
                       {/block:Description}

                       <div class="social-container">
                            <div class="social-follow-item">
                                <a id="social-follow-youtube" href="https://youtube.com/danisnotonfire"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 width="13px" height="13px" viewBox="0 0 13 13" enable-background="new 0 0 13 13" xml:space="preserve" alt="Youtube icon">
                            <circle id="circle" fill="#000000" cx="6.5" cy="6.5" r="6.138" stroke="ffffff" stroke-width=".592px"/>
                            <path id="icon" d="M10.449,5.246C10.35,4.008,10.001,3.796,8.969,3.73
                                C8.253,3.684,7.459,3.673,6.503,3.673c-0.001,0-0.002,0-0.003,0s-0.002,0-0.003,0C5.541,3.673,4.747,3.684,4.031,3.73
                                C2.999,3.796,2.65,4.008,2.551,5.246C2.519,5.65,2.504,6.049,2.5,6.44c0.004,0.391,0.019,0.79,0.051,1.194
                                C2.65,8.873,2.999,9.085,4.031,9.151c0.716,0.046,1.509,0.057,2.466,0.056c0.001,0,0.002,0,0.003,0s0.002,0,0.003,0
                                c0.957,0.001,1.75-0.011,2.466-0.056c1.032-0.066,1.382-0.278,1.481-1.516c0.032-0.404,0.047-0.803,0.051-1.194
                                C10.496,6.049,10.481,5.65,10.449,5.246z M5.708,7.686V6.44v0V5.195L7.842,6.44L5.708,7.686z"/>
                            <path id="icon-static" style="fill:#FFFFFF;" d="M10.449,5.246C10.35,4.008,10.001,3.796,8.969,3.73
                                C8.253,3.684,7.459,3.673,6.503,3.673c-0.001,0-0.002,0-0.003,0s-0.002,0-0.003,0C5.541,3.673,4.747,3.684,4.031,3.73
                                C2.999,3.796,2.65,4.008,2.551,5.246C2.519,5.65,2.504,6.049,2.5,6.44c0.004,0.391,0.019,0.79,0.051,1.194
                                C2.65,8.873,2.999,9.085,4.031,9.151c0.716,0.046,1.509,0.057,2.466,0.056c0.001,0,0.002,0,0.003,0s0.002,0,0.003,0
                                c0.957,0.001,1.75-0.011,2.466-0.056c1.032-0.066,1.382-0.278,1.481-1.516c0.032-0.404,0.047-0.803,0.051-1.194
                                C10.496,6.049,10.481,5.65,10.449,5.246z M5.708,7.686V6.44v0V5.195L7.842,6.44L5.708,7.686z"/>
                            </svg></a>
                            </div>
                           
                            <div class="social-follow-item">
                                <a id="social-follow-twitter" href="https://twitter.com/danielhowell"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 width="13px" height="13px" viewBox="0 0 13 13" enable-background="new 0 0 13 13" xml:space="preserve" alt="Twitter icon">
                            <circle id="circle" fill="#000000" cx="6.5" cy="6.5" r="6.138" stroke="ffffff" stroke-width=".592px"/>
                            <path id="icon" d="M10.227,3.93c0.083-0.058,0.133-0.021,0.095,0.069c-0.119,0.282-0.315,0.481-0.566,0.668
                                c-0.03,0.022-0.012,0.052,0.017,0.05c0.246-0.019,0.459-0.072,0.675-0.18c0.033-0.017,0.078-0.001,0.043,0.05
                                c-0.185,0.265-0.336,0.445-0.651,0.665C9.815,5.268,9.793,5.303,9.793,5.326c0,0.238-0.007,0.415-0.009,0.558
                                C9.768,6.927,8.69,9.593,6.131,9.901C4.868,10.053,4.06,9.941,3.08,9.328C3.023,9.292,3.055,9.254,3.101,9.257
                                c1.097,0.071,1.773-0.362,2.106-0.602C5.23,8.639,5.293,8.591,5.2,8.589C4.365,8.577,3.948,7.955,3.837,7.607
                                c-0.017-0.052,0.005-0.073,0.04-0.069C4.01,7.555,4.308,7.576,4.505,7.493C4.533,7.481,4.527,7.463,4.493,7.46
                                c-0.899-0.068-1.264-1.044-1.25-1.459c0.002-0.047,0.025-0.082,0.064-0.06c0.166,0.091,0.434,0.19,0.614,0.19
                                c0.025,0,0.022-0.02-0.003-0.034c-0.614-0.344-0.86-1.263-0.48-2.003C3.466,4.04,3.515,4.045,3.541,4.079
                                c0.781,1.025,2.126,1.56,3.075,1.605c0.061,0.003,0.087-0.008,0.078-0.088C6.5,3.842,8.454,3.229,9.33,4.214
                                C9.349,4.236,9.365,4.239,9.398,4.24C9.54,4.248,9.955,4.122,10.227,3.93z"/>
                            <path id="icon-static" style="fill:#FFFFFF;" d="M10.227,3.93c0.083-0.058,0.133-0.021,0.095,0.069c-0.119,0.282-0.315,0.481-0.566,0.668
                                c-0.03,0.022-0.012,0.052,0.017,0.05c0.246-0.019,0.459-0.072,0.675-0.18c0.033-0.017,0.078-0.001,0.043,0.05
                                c-0.185,0.265-0.336,0.445-0.651,0.665C9.815,5.268,9.793,5.303,9.793,5.326c0,0.238-0.007,0.415-0.009,0.558
                                C9.768,6.927,8.69,9.593,6.131,9.901C4.868,10.053,4.06,9.941,3.08,9.328C3.023,9.292,3.055,9.254,3.101,9.257
                                c1.097,0.071,1.773-0.362,2.106-0.602C5.23,8.639,5.293,8.591,5.2,8.589C4.365,8.577,3.948,7.955,3.837,7.607
                                c-0.017-0.052,0.005-0.073,0.04-0.069C4.01,7.555,4.308,7.576,4.505,7.493C4.533,7.481,4.527,7.463,4.493,7.46
                                c-0.899-0.068-1.264-1.044-1.25-1.459c0.002-0.047,0.025-0.082,0.064-0.06c0.166,0.091,0.434,0.19,0.614,0.19
                                c0.025,0,0.022-0.02-0.003-0.034c-0.614-0.344-0.86-1.263-0.48-2.003C3.466,4.04,3.515,4.045,3.541,4.079
                                c0.781,1.025,2.126,1.56,3.075,1.605c0.061,0.003,0.087-0.008,0.078-0.088C6.5,3.842,8.454,3.229,9.33,4.214
                                C9.349,4.236,9.365,4.239,9.398,4.24C9.54,4.248,9.955,4.122,10.227,3.93z"/>
                            </svg></a>
                            </div>

                            <div class="social-follow-item">
                                <a id="social-follow-facebook" href="https://www.facebook.com/danisnotonfire"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 width="13px" height="13px" viewBox="0 0 13 13" enable-background="new 0 0 13 13" xml:space="preserve" alt="Facebook icon">
                            <circle id="circle" fill="#000000" cx="6.5" cy="6.5" r="6.138" stroke="ffffff" stroke-width=".592px"/>
                            <path id="icon" d="M7.081,4.608c0.023-0.328,0.262-0.493,0.547-0.516c0.192-0.015,0.562-0.008,0.785,0V2.891
                                C8.105,2.86,7.612,2.837,7.05,2.876C6.34,2.924,5.688,3.515,5.688,4.431v1.147H4.51v1.37l1.178,0.011v3.384h1.37V6.972h1.149
                                l0.159-1.394H7.058V5.27C7.062,5.062,7.068,4.799,7.081,4.608z"/>
                            <path id="icon-static" style="fill:#FFFFFF;" d="M7.081,4.608c0.023-0.328,0.262-0.493,0.547-0.516c0.192-0.015,0.562-0.008,0.785,0V2.891
                                C8.105,2.86,7.612,2.837,7.05,2.876C6.34,2.924,5.688,3.515,5.688,4.431v1.147H4.51v1.37l1.178,0.011v3.384h1.37V6.972h1.149
                                l0.159-1.394H7.058V5.27C7.062,5.062,7.068,4.799,7.081,4.608z"/>
                            </svg></a>
                            </div>
                            
                            <div class="social-follow-item">
                                <a id="social-follow-instagram" href="https://www.instagram.com/danielhowell">
                                <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 width="13px" height="13px" viewBox="0 0 13 13" enable-background="new 0 0 13 13" xml:space="preserve" alt="Instagram icon">
                            <circle id="circle" fill="#000000" cx="6.5" cy="6.5" r="6.138" stroke="ffffff" stroke-width=".592px"/>
                            <g id="icon">
                                <path id="border" d="M7.823,2.851l-1.323,0l-1.323,0c-1.523,0-2.386,0.832-2.386,2.386l0,2.647
                                    c0,1.554,0.612,2.386,2.386,2.386l1.323,0h1.323c1.774,0,2.386-0.832,2.386-2.386l0-2.647C10.209,3.682,9.346,2.851,7.823,2.851z
                                     M9.606,7.98c0,0.929-0.753,1.683-1.683,1.683l-2.84,0c-0.929,0-1.683-0.753-1.683-1.683l0-2.84c0-0.929,0.753-1.683,1.683-1.683
                                    l2.84,0c0.929,0,1.683,0.753,1.683,1.683L9.606,7.98z"/>
                                <path id="lens" d="M6.5,5.359c0.662,0,1.201,0.539,1.201,1.201c0,0.662-0.539,1.201-1.201,1.201
                                    c-0.662,0-1.201-0.539-1.201-1.201C5.299,5.897,5.838,5.359,6.5,5.359 M6.5,4.732c-1.009,0-1.828,0.818-1.828,1.828
                                    S5.491,8.387,6.5,8.387S8.328,7.569,8.328,6.56C8.328,5.55,7.509,4.732,6.5,4.732L6.5,4.732z"/>
                                <circle id="small_circle" cx="8.457" cy="4.62" r="0.444"/>
                            </g>
                            <g id="icon-static">
                                <path id="border" style="fill:#FFFFFF;" d="M7.823,2.851l-1.323,0l-1.323,0c-1.523,0-2.386,0.832-2.386,2.386l0,2.647
                                    c0,1.554,0.612,2.386,2.386,2.386l1.323,0h1.323c1.774,0,2.386-0.832,2.386-2.386l0-2.647C10.209,3.682,9.346,2.851,7.823,2.851z
                                     M9.606,7.98c0,0.929-0.753,1.683-1.683,1.683l-2.84,0c-0.929,0-1.683-0.753-1.683-1.683l0-2.84c0-0.929,0.753-1.683,1.683-1.683
                                    l2.84,0c0.929,0,1.683,0.753,1.683,1.683L9.606,7.98z"/>
                                <path id="lens" style="fill:#FFFFFF;" d="M6.5,5.359c0.662,0,1.201,0.539,1.201,1.201c0,0.662-0.539,1.201-1.201,1.201
                                    c-0.662,0-1.201-0.539-1.201-1.201C5.299,5.897,5.838,5.359,6.5,5.359 M6.5,4.732c-1.009,0-1.828,0.818-1.828,1.828
                                    S5.491,8.387,6.5,8.387S8.328,7.569,8.328,6.56C8.328,5.55,7.509,4.732,6.5,4.732L6.5,4.732z"/>
                                <circle id="small_circle" style="fill:#FFFFFF;" cx="8.457" cy="4.62" r="0.444"/>
                            </g>
                            </svg></a>
                            </div>
                        </div>
                        
                    </div>




                    <div class="docum-ready-cover">
                        <img src="http://i.imgur.com/bW3XNFs.jpg" nopin = "nopin" alt="danisnotonfire eclipse logo">
                    </div>


                    <!--PUZZLE-->
                    <img src="http://i.imgur.com/bW3XNFs.jpg" nopin = "nopin" alt="danisnotonfire eclipse logo" class="jqPuzzle jqp-en-r3-c3-h5-s1-NBCDE" />


                     <!--TR secret sound-->
                    <a id="play-video" href="#"></a><br />
                    <iframe id="video" width="auto" height="auto" position="relative" src="//www.youtube.com/embed/Eysq7jdEKbc?rel=0" frameborder="0" allowfullscreen></iframe>


                    <!--eclipse-->
                    <div class="eclipse_picture">
                        <img src="http://i.imgur.com/bW3XNFs.jpg" nopin = "nopin" alt="danisnotonfire eclipse logo">
                    </div>


                    <!--Mog gif links-->
                    <div class="mog_gifs">

                        <div class="mog_container">
                            <a href="http://www.leekspin.com" target="_blank">
                                <img src="http://images.wikia.com/finalfantasy/images/2/2b/Mog_FF6.gif" alt="final fantasy mog">
                            </a>
                        </div>

                        <div class="mog_container">
                             <a href="http://www.omfgdogs.com" target="_blank">
                                <img src="http://images.wikia.com/finalfantasy/images/2/2b/Mog_FF6.gif" alt="final fantasy mog">
                            </a>
                        </div>

                        <div class="mog_container">
                            <a href="http://www.staggeringbeauty.com" target="_blank">
                                <img src="http://images.wikia.com/finalfantasy/images/2/2b/Mog_FF6.gif" alt="final fantasy mog">
                            </a>
                        </div>

                    </div>


                    <!--eclipse-->
                    <div class="static-eclipse">

                        <div class="static-eclipse_picture">
                            <img src="http://i.imgur.com/9vFgcWw.jpg" nopin = "nopin" alt="danisnotonfire eclipse logo">
                        </div>

                    </div>



                    <div class="ascend" id="sm-screen">ascend!</div>



                    </article>


                 </div>

             </section>






             <section class="action-area">

                <!--    hello internet  -->
                <p class="japanese">こんにちはインターネット</p>


                <div class="posts-panel">

                   <section id="posts-container">

                       <div id="posts">
                            {block:Posts inlineMediaWidth="500" inlineNestedMediaWidth="500"}


                            <article id="{PostID}" class="entry">

                            {block:Answer}
                            <div class="text">
                                <div class="question">
                                    <div class="source" style="font-size: 12.25px;font-weight: 700;margin-left: 31px;margin-top: 3.25px;letter-spacing: .4px;word-spacing: .65px;">{Asker}</div>
                                    <h4>{Question}</h4>
                                    <div class="q-box">Q</div>
                                </div>
                                <div class="answer">
                                    <h5>{answer}</h5>
                                    <div class="a-box">A</div>
                                </div>
                            </div>
                            {/block:Answer}

                            {block:Chat}
                            <div class="text">
                                {block:Title}<h2>{Title}</h2>{/block:Title}
                                {block:Lines}
                                    <div class="{Alt} user_{UserNumber}">
                                        {block:Label}<b>{Label}</b>{/block:Label} {Line}
                                    </div>
                                {/block:Lines}
                            </div>
                            {/block:Chat}

                            {block:Link}
                            <div class="text">
                                <a class="link" href="{URL}">{Name}</a>
                                {block:Description}
                                    {Description}
                                {/block:Description}
                            </div>
                            {/block:Link}

                            {block:Text}
                            <div class="text">
                                {block:Title}<h2>{Title}</h2>{/block:Title}
                                {Body}
                            </div>
                            {/block:Text}

                            {block:Quote}
                            <span class="text quote"><h3>{Quote}</h3></span>
                            <div class="quote-source">&mdash; &nbsp;&nbsp;{Source}</div>
                            {/block:Quote}

                            {block:Photo}
                                <div class="photo">
                                {block:indexpage}
                                    <a href="{permalink}">
                                        <img src="{PhotoURL-HighRes}" alt="{PhotoAlt}" nopin = "nopin">
                                    </a>
                                {/block:indexpage}
                                {block:permalinkpage}
                                {LinkOpenTag}
                                    <img src="{PhotoURL-HighRes}" alt="{PhotoAlt}" nopin = "nopin">
                                {LinkCloseTag}
                                {/block:permalinkpage}
                                </div>
                            {/block:Photo}

                            {block:Photoset}
                                <figure class="photoset {block:Caption}with-caption{/block:Caption}">
                                    <!--MUST BE -500 TO FIX PHOTOSET JUMP FROM AUTO 700-->
                                    {Photoset-500}
                                </figure>
                            {/block:Photoset}

                            {block:Audio}
                            <div class="media">
                                {AudioEmbed-500}
                            </div>
                            {/block:Audio}

                            {block:Video}
                            <div class="video-wrapper">
                                <!--WAS 640-->
                                {Video-500}
                            </div>
                            {/block:Video}

                            {block:date}

                                {block:Caption}
                                    <div class="captions">
                                        {Caption}
                                    </div>
                                {/block:Caption}
                                
                                
                                <div class="details">

                                    {block:indexpage}
                                        <a href="{Permalink}">{ShortMonth}.{DayOfMonth} </a>
                                        {block:NoteCount}
                                        | <a href="{Permalink}">{NoteCount}N </a>
                                        {/block:NoteCount}
                                    {/block:indexpage}

                                    {block:permalinkpage}
                                        <a>{ShortMonth}.{DayOfMonth} </a>
                                        <script>
                                        $(document).ready(function(){
                                            $('a.togglet.{PostID}').click(function(e){
                                            e.preventDefault();
                                                $('div.tags.{PostID}').slideToggle();
                                                $(this).text( $(this).text() == 'hide' ? "show" : "hide");
                                            });
                                        });
                                        </script>
                                        {block:HasTags}
                                            | <a class="togglet {PostID}" href="javascript:;">tags </a>
                                        {/block:HasTags}
                                        {block:RebloggedFrom}
                                            | <a class="via" href="{ReblogParentURL}">via</a>{block:ContentSource}<a class="source" href="{SourceURL}">source</a>{/block:ContentSource}
                                        {/block:RebloggedFrom}
                                    {/block:permalinkpage}

                                    {block:HasTags}
                                    <div class="tags {PostID}">
                                       <div>
                                         {block:Tags}
                                            <a href="{TagURL}">#{Tag}</a>
                                         {/block:Tags}
                                       </div>
                                    </div>
                                    {/block:HasTags}
                                    
                                    
                                    <section id="leftbutton">
                                        <div class="button">
                                            <a href="{ReblogURL}" target="_blank" class="reblog" id="reblog-button">
                                                <svg version="1.1" id="icons" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	                                            viewBox="0 0 12.212 11.119" style="enable-background:new 0 0 12.212 11.119;" xml:space="preserve">
                                                    <g id="reblog">
                                                        <path id="top-arrow" d="M0.982,5.638c0.012,0.001,0.023,0.001,0.034,0.001
                                                            c0.237,0,0.436-0.182,0.454-0.422c0.189-2.575,2.051-4.305,4.635-4.305c1.259,0,2.369,0.517,3.3,1.536
                                                            c0.069,0.08,0.136,0.159,0.2,0.236l-1.704-0.43C7.658,2.192,7.41,2.34,7.348,2.584c-0.062,0.244,0.086,0.491,0.33,0.553
                                                            l2.961,0.748c0.005,0.001,0.01,0.002,0.015,0.003c0.003,0.001,0.005,0.001,0.008,0.002c0.013,0.002,0.025,0.004,0.039,0.006
                                                            c0.002,0.001,0.005,0.001,0.008,0.001c0.01,0.001,0.021,0.002,0.032,0.002c0.002,0,0.005,0,0.008,0c0,0,0.001,0,0.002,0
                                                            c0.006,0,0.013-0.001,0.019-0.001c0.029-0.001,0.058-0.005,0.087-0.012c0.005-0.002,0.011-0.003,0.016-0.004
                                                            c0.007-0.002,0.015-0.005,0.022-0.007c0.006-0.002,0.013-0.004,0.019-0.006c0.006-0.002,0.013-0.005,0.019-0.008
                                                            c0.007-0.003,0.014-0.007,0.021-0.01c0.006-0.003,0.011-0.006,0.017-0.009c0.008-0.005,0.015-0.009,0.023-0.013
                                                            c0.003-0.002,0.005-0.003,0.008-0.005c0.002-0.002,0.004-0.004,0.007-0.006c0.007-0.005,0.014-0.01,0.021-0.015
                                                            c0.005-0.004,0.01-0.008,0.015-0.012c0.002-0.001,0.004-0.002,0.006-0.004c0.007-0.007,0.014-0.013,0.021-0.019
                                                            c0.002-0.003,0.004-0.005,0.006-0.007c0.007-0.008,0.013-0.015,0.02-0.023c0.003-0.003,0.006-0.006,0.008-0.01
                                                            C11.113,3.719,11.12,3.71,11.127,3.7c0.002-0.003,0.005-0.007,0.007-0.01c0.006-0.009,0.011-0.018,0.016-0.028
                                                            c0.002-0.002,0.003-0.005,0.004-0.007c0.006-0.01,0.01-0.021,0.015-0.031c0.002-0.003,0.003-0.006,0.004-0.009
                                                            c0.005-0.012,0.009-0.023,0.013-0.035c0.001-0.003,0.001-0.005,0.002-0.007c0.003-0.011,0.006-0.023,0.009-0.034
                                                            c0-0.002,0.001-0.004,0.001-0.006c0.003-0.013,0.005-0.025,0.006-0.038c0-0.003,0.001-0.006,0.001-0.009
                                                            c0.001-0.012,0.002-0.024,0.002-0.037c0-0.001,0-0.003,0-0.004c0-0.011-0.001-0.023-0.002-0.034c0-0.004-0.001-0.008-0.001-0.012
                                                            c0-0.002,0-0.004,0-0.006l-0.332-2.987c-0.028-0.251-0.253-0.431-0.503-0.403c-0.251,0.028-0.431,0.253-0.403,0.503l0.153,1.374
                                                            C10.11,1.869,10.1,1.858,10.091,1.848c-0.003-0.004-0.005-0.007-0.008-0.01C9.558,1.263,8.97,0.815,8.336,0.506
                                                            C7.643,0.17,6.893,0,6.106,0C4.605,0,3.279,0.495,2.271,1.431c-1.009,0.937-1.6,2.223-1.71,3.719
                                                            C0.543,5.401,0.732,5.619,0.982,5.638z"/>
                                                        <path id="bottom-arrow" d="M1.006,7.709c0,0.004,0.001,0.008,0.001,0.012c0,0.002,0,0.004,0,0.006
                                                            l0.332,2.987c0.025,0.233,0.223,0.405,0.452,0.405c0.017,0,0.034-0.001,0.051-0.003c0.25-0.028,0.431-0.253,0.403-0.503
                                                            L2.092,9.239C2.102,9.25,2.111,9.26,2.119,9.271C2.122,9.274,2.124,9.277,2.127,9.28c0.525,0.576,1.113,1.024,1.748,1.332
                                                            c0.693,0.336,1.443,0.506,2.23,0.506c1.501,0,2.827-0.495,3.835-1.431c1.009-0.937,1.6-2.223,1.71-3.719
                                                            c0.019-0.251-0.17-0.47-0.421-0.488c-0.251-0.019-0.47,0.17-0.488,0.421c-0.189,2.575-2.051,4.305-4.635,4.305
                                                            c-1.259,0-2.369-0.517-3.3-1.536c-0.069-0.08-0.136-0.159-0.2-0.236l1.704,0.43c0.244,0.062,0.491-0.086,0.553-0.33
                                                            c0.062-0.244-0.086-0.491-0.33-0.553L1.572,7.234C1.567,7.233,1.563,7.232,1.558,7.231C1.555,7.23,1.552,7.23,1.549,7.229
                                                            C1.536,7.226,1.524,7.224,1.512,7.223c-0.003,0-0.006-0.001-0.009-0.001C1.492,7.221,1.482,7.22,1.471,7.22
                                                            c-0.003,0-0.005,0-0.008,0c-0.012,0-0.024,0-0.037,0.001c-0.004,0-0.008,0.001-0.012,0.001C1.402,7.223,1.391,7.225,1.379,7.227
                                                            c-0.003,0-0.007,0.001-0.01,0.002C1.36,7.231,1.35,7.233,1.341,7.236C1.338,7.237,1.334,7.238,1.33,7.239
                                                            C1.319,7.243,1.307,7.247,1.296,7.251c-0.003,0.001-0.007,0.003-0.01,0.004C1.274,7.26,1.263,7.265,1.251,7.271
                                                            C1.249,7.272,1.248,7.272,1.247,7.273c-0.011,0.006-0.023,0.013-0.034,0.02C1.212,7.294,1.211,7.294,1.209,7.294
                                                            c0,0,0,0.001-0.001,0.001C1.197,7.303,1.187,7.311,1.176,7.319C1.173,7.321,1.17,7.323,1.168,7.325S1.163,7.329,1.161,7.331
                                                            C1.154,7.338,1.147,7.344,1.14,7.351C1.138,7.353,1.136,7.356,1.134,7.358C1.127,7.365,1.12,7.372,1.114,7.38
                                                            C1.111,7.383,1.109,7.386,1.106,7.389C1.098,7.398,1.092,7.407,1.085,7.417C1.083,7.421,1.08,7.424,1.078,7.428
                                                            C1.072,7.437,1.067,7.446,1.062,7.455C1.06,7.458,1.059,7.461,1.057,7.464c-0.005,0.01-0.01,0.02-0.014,0.03
                                                            C1.042,7.497,1.04,7.501,1.039,7.504C1.034,7.516,1.03,7.527,1.026,7.539C1.025,7.541,1.025,7.544,1.024,7.546
                                                            C1.02,7.557,1.017,7.568,1.015,7.579c0,0.002-0.001,0.004-0.001,0.006C1.011,7.598,1.009,7.61,1.008,7.623
                                                            c0,0.003-0.001,0.006-0.001,0.009C1.006,7.644,1.005,7.657,1.005,7.669c0,0.001,0,0.003,0,0.004
                                                            C1.005,7.685,1.005,7.697,1.006,7.709z"/>
                                                    </g>
                                                </svg>
                                            </a>
                                        </div>
                                    </section>
                                    
                                    <section id="rightbutton">
                                        <div class="button">
                                            <a href="javascript:;" class="like">{LikeButton}
                                                <svg version="1.1" id="icons" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	                                            viewBox="0 0 12.212 11.119" style="enable-background:new 0 0 12.212 11.119;" xml:space="preserve">
                                                    <path id="mainheart" style="stroke-width:0.8922;stroke-miterlimit:10;" d="M6.105,3.17
                                                        C3.825-2.104-2.044,1.109,1.62,6.071c1.359,1.84,3.599,3.646,4.485,4.449c0.886-0.803,3.126-2.609,4.485-4.449
                                                        C14.254,1.109,8.385-2.104,6.105,3.17z"/>
                                                    <path id="heartoutline" style="stroke-width:0.8922;stroke-miterlimit:10;" d="M6.105,3.17
                                                        C3.825-2.104-2.044,1.109,1.62,6.071c1.359,1.84,3.599,3.646,4.485,4.449c0.886-0.803,3.126-2.609,4.485-4.449
                                                        C14.254,1.109,8.385-2.104,6.105,3.17z"/>
                                                </svg>
                                            </a> 
                                        </div>
                                    </section>    

                                    
                                </div>

                                
                                
                                {/block:date}

                                </article><!--   permalink notes box   -->

                                {block:PermalinkPage}
                                {block:date}

                                {block:PostNotes}
                                <div class="permalink-box">
                                {PostNotes}
                                </div>
                                {/block:PostNotes}

                                {/block:date}
                                {/block:PermalinkPage}

                                {/block:Posts}

                                </div><!--    posts   -->

                                {block:Pagination}
                                <footer id="pagination">
                                    {block:ifnotinfinitescrolling}
                                        <a id="newer">Newer</a>
                                        <a id="older">Older</a>
                                    {/block:ifnotinfinitescrolling}
                                    {block:PreviousPage}
                                        <a href="{PreviousPage}" id="newer" class="exist">Newer</a>
                                    {/block:PreviousPage}
                                    {block:NextPage}
                                        <a href="{NextPage}" id="older" class="exist">Older</a>
                                    {/block:NextPage}
                                </footer>
                                {/block:Pagination}
                     </section>
                    
                </div>



                <script type="text/javascript">

                    {block:indexpage}
                        (function (){
                            var $K = $("#posts");
                            {block:ifinfinitescrolling}
                                $K.infinitescroll({
                                    navSelector:'#pagination',nextSelector:'#pagination a#older',itemSelector: ".entry",loading:{finishedMsg: function(){}}},function(newElements){var $newElems = $(newElements).css("opacity","1").css("pointer-events","none");
                                    $(document).ready(function() {
                                        $("a.share-button").click(function(){
                                            var id = $(this).attr('rel');
                                            $('.share' + id).fadeToggle("")
                                        });
                                        $(".entry").mouseleave(function(){
                                            $(".share").fadeOut("")
                                        });
                                    });
                                    var $newElemsIDs = $newElems.map(function (){
                                        return this.id;
                                    })
                                    .get();$newElems.imagesLoaded(function (){
                                        $newElems.css("opacity","1").css("pointer-events","auto");
                                        console.log($newElems,$newElemsIDs);
                                        Tumblr.LikeButton.get_status_by_post_ids($newElemsIDs);
                                    });
                                });
                            {/block:ifinfinitescrolling}
                        })();
                    {/block:indexpage}

                </script>

                 
            </section>

             
             
            <p class="ascend" id="lg-screen">ascend!</p>


            <div id="contentbar-right">
                <div id="text-right">

                    <!--hello internet-->
                    <p class="japanese_large">こんにちはインターネット</p>
                </div>
            </div>


        <!--end of .bind div  -->
        </div>

    </main>



     
    <script type="text/javascript">
        $(function() {
            $('body').removeClass('fade-out');
        });
    </script>
         

    <!--SCRIPT EDITS-->
    <!--tumblr messaging-->
    <script src="http://assets.tumblr.com/assets/scripts/tumblelog_post_message_queue.js?_v=faaf4d00f3470ad98bb0d4702bfff945"></script>

    <!--scroll to top script for ascend button-->
    <script type="text/javascript">;(function(f){"use strict";"function"===typeof define&&define.amd?define(["jquery"],f):"undefined"!==typeof module&&module.exports?module.exports=f(require("jquery")):f(jQuery)})(function($){"use strict";function n(a){return!a.nodeName||-1!==$.inArray(a.nodeName.toLowerCase(),["iframe","#document","html","body"])}function h(a){return $.isFunction(a)||$.isPlainObject(a)?a:{top:a,left:a}}var p=$.scrollTo=function(a,d,b){return $(window).scrollTo(a,d,b)};p.defaults={axis:"xy",duration:0,limit:!0};$.fn.scrollTo=function(a,d,b){"object"=== typeof d&&(b=d,d=0);"function"===typeof b&&(b={onAfter:b});"max"===a&&(a=9E9);b=$.extend({},p.defaults,b);d=d||b.duration;var u=b.queue&&1<b.axis.length;u&&(d/=2);b.offset=h(b.offset);b.over=h(b.over);return this.each(function(){function k(a){var k=$.extend({},b,{queue:!0,duration:d,complete:a&&function(){a.call(q,e,b)}});r.animate(f,k)}if(null!==a){var l=n(this),q=l?this.contentWindow||window:this,r=$(q),e=a,f={},t;switch(typeof e){case "number":case "string":if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(e)){e= h(e);break}e=l?$(e):$(e,q);case "object":if(e.length===0)return;if(e.is||e.style)t=(e=$(e)).offset()}var v=$.isFunction(b.offset)&&b.offset(q,e)||b.offset;$.each(b.axis.split(""),function(a,c){var d="x"===c?"Left":"Top",m=d.toLowerCase(),g="scroll"+d,h=r[g](),n=p.max(q,c);t?(f[g]=t[m]+(l?0:h-r.offset()[m]),b.margin&&(f[g]-=parseInt(e.css("margin"+d),10)||0,f[g]-=parseInt(e.css("border"+d+"Width"),10)||0),f[g]+=v[m]||0,b.over[m]&&(f[g]+=e["x"===c?"width":"height"]()*b.over[m])):(d=e[m],f[g]=d.slice&& "%"===d.slice(-1)?parseFloat(d)/100*n:d);b.limit&&/^\d+$/.test(f[g])&&(f[g]=0>=f[g]?0:Math.min(f[g],n));!a&&1<b.axis.length&&(h===f[g]?f={}:u&&(k(b.onAfterFirst),f={}))});k(b.onAfter)}})};p.max=function(a,d){var b="x"===d?"Width":"Height",h="scroll"+b;if(!n(a))return a[h]-$(a)[b.toLowerCase()]();var b="client"+b,k=a.ownerDocument||a.document,l=k.documentElement,k=k.body;return Math.max(l[h],k[h])-Math.min(l[b],k[b])};$.Tween.propHooks.scrollLeft=$.Tween.propHooks.scrollTop={get:function(a){return $(a.elem)[a.prop]()}, set:function(a){var d=this.get(a);if(a.options.interrupt&&a._last&&a._last!==d)return $(a.elem).stop();var b=Math.round(a.now);d!==b&&($(a.elem)[a.prop](b),a._last=this.get(a))}};return p});</script>

    <!--ascend button-->
    <script type="text/javascript">
        $(function() {
            $('.ascend').click(function() {
                console.log('scrolling');
            $('.ascend').addClass('ascend_scrolling');
            $('body').scrollTo(0, 'slow');
            $('.ascend').removeClass('ascend_scrolling');
                return false;
            });
        });
    </script>
    


    <script type="text/javascript">
        (function($) {
    /*
     * jqPuzzle - Sliding Puzzles with jQuery
     * Version 1.02
     *
     * Copyright (c) 2008 Ralf Stoltze, http://www.2meter3.de/jqPuzzle/
     * Dual-licensed under the MIT and GPL licenses.
     */
    $.fn.jqPuzzle = function(settings, texts) {

        // default settings
        var defaults = {

            rows: 3, 					// number of rows [3 ... 9]
            cols: 3,		 			// number of columns [3 ... 9]
            hole: 5,					// initial hole position [1 ... rows*columns]
            shuffle: false,				// initially show shuffled pieces [true|false]
            numbers: false,				// initially show numbers on pieces [true|false]
            language: 'en',				// language for gui elements [language code]

            // display additional gui controls
            control: {
                shufflePieces: true,	// display 'Shuffle' button [true|false]
                confirmShuffle: false,	// ask before shuffling [true|false]
                toggleOriginal: false,	// display 'Original' button [true|false]
                toggleNumbers: false,	// display 'Numbers' button [true|false]
                counter: false,			// display moves counter [true|false]
                timer: false,			// display timer (seconds) [true|false]
                pauseTimer: false		// pause timer if 'Original' button is activated
                                        // [true|false]
            },

            // perform actions when the puzzle is solved sucessfully
            success: {
                fadeOriginal: true,		// cross-fade original image [true|false]
                callback: undefined,	// callback a user-defined function [function]
                                        // the function is passed an object as its argument
                                        // which includes the fields 'moves' and 'seconds'
                callbackTimeout: 300	// time in ms after which the callback is called
            },

            // animation speeds and settings
            animation: {
                shuffleRounds: 1,		// number of shuffle rounds [1 ... ]
                shuffleSpeed: 800,		// time in ms to perform a shuffle round
                slidingSpeed: 200,		// time in ms for a single move
                fadeOriginalSpeed: 600	// time in ms to cross-fade original image
            },

            // additional style information not specified via css
            style: {
                gridSize: 2,			// space between two pieces in px
                overlap: true,			// if true, adjacent piece borders will overlap
                                        // applies only if gridSize is set to 0
                backgroundOpacity: 0.1	// opacity of the original image behind the pieces
                                        // [0 ... 1] (0 means no display)
            }
        };

        // language localizations
        var i18n = {
            en: {
                shuffleLabel: 			'Shuffle',
                toggleOriginalLabel: 	'Original',
                toggleNumbersLabel: 	'Numbers',
                confirmShuffleMessage: 	'Do you really want to shuffle?',
                movesLabel:				'moves',
                secondsLabel:			'seconds'
            },
            fr: {
                shuffleLabel: 			'Mélanger',
                toggleOriginalLabel: 	'Original',
                toggleNumbersLabel: 	'Nombres',
                confirmShuffleMessage: 	'Veux-tu vraiment mélanger?',
                movesLabel:				'mouvements',
                secondsLabel:			'secondes'
            },
            de: {
                shuffleLabel:			'Mischen',
                toggleOriginalLabel: 	'Original',
                toggleNumbersLabel: 	'Nummern',
                confirmShuffleMessage: 	'Willst du wirklich mischen?',
                movesLabel:				'Züge',
                secondsLabel:			'Sekunden'
            },
            pt: {
                shuffleLabel:			'Embaralhar',
                toggleOriginalLabel:	'Original',
                toggleNumbersLabel:		'Numeros',
                confirmShuffleMessage:	'Tem certeza que deseja reembralhar?',
                movesLabel:				'movimentos',
                secondsLabel:			'segundos'
            }
        };

        // if rows or cols, but no hole was user-defined,
        // explicitly set hole position to last piece (bottom right)
        if(settings && !settings.hole && (settings.rows || settings.cols)) {
            settings.hole = (settings.rows || defaults.rows) * (settings.cols || defaults.cols);
        }

        // extend the user-defined settings object with default settings
        settings = $.extend(true, {}, defaults, settings);

        // extend the user-defined texts object with current language texts
        texts = $.extend((i18n[settings.language] || i18n[defaults.language]), texts);

        // create some handy shortcut variables
        var rows = settings.rows,
            cols = settings.cols,
            hole = settings.hole;
        var control = settings.control,
            success = settings.success,
            animation = settings.animation,
            style = settings.style;

        // check settings for valid values

        // keep rows and columns within limits
        if(rows < 3 || rows > 9) rows = defaults.rows;
        if(cols < 3 || cols > 9) cols = defaults.rows;

        // keep hole position within limits
        if((hole > (rows*cols)) || (hole < 1)) hole = rows*cols;
        hole--; // zero-based index

        // animation speed = 0 doesn't work
        if(animation.slidingSpeed < 1) animation.slidingSpeed = 1;
        if(animation.shuffleSpeed < 1)  animation.shuffleSpeed = 1;
        if(animation.fadeOriginalSpeed < 1) animation.fadeOriginalSpeed = 1;

        // keep shuffle rounds within limits
        if(animation.shuffleRounds < 1) animation.shuffleRounds = 1;


        // helper functions --------------------------------------------------------

        // checks if the puzzle is solved
        var checkSolution = function($pieces) {
            // iterate over pieces and check each piece
            for(var i = 0; i < $pieces.length; i++) {
                // since the hole is not saved in the pieces array,
                // adjust the index if it is bejond the hole position
                var pieceIndex = (i < hole) ? i : i + 1;

                // check if current position match target (index) position
                if($pieces.eq(i).attr('current') != pieceIndex) return false;
            }
            return true;
        };

        // checks if the puzzle can be solved (pure math ...)
        var checkOrder = function(numbersArray) {
            var product = 1;
            for(var i = 1; i <= (rows*cols-1); i++) {
                for(var j = (i+1); j <= (rows*cols); j++) {
                    product *= ((numbersArray[i-1] - numbersArray[j-1]) / (i-j));
                }
            }
            return Math.round(product) == 1;
        };

        // get the linear index from a row/col pair (zero-based)
        var getLinearPosition = function(row, col) {
            return parseInt(row)*cols + parseInt(col);
        };

        // get the row/col pair from a linear index (zero-based)
        var getMatrixPosition = function(index) {
            return {row: (Math.floor(index/cols)), col: (index%cols)};
        };

        // get the pixel width of a border (internet explorer returns keywords)
        // the left side values will be used
        var getBorderWidth = function($element) {
            // the reported css value
            var property = $element.css('border-left-width');
            // a border style must be set to get a valid border width
            if($element.css('border-left-style') != 'none') {
                switch(property) {
                    case 'thin': return 2;
                    case 'medium': return 4;
                    case 'thick': return 6;
                    default:
                        return parseInt(property) || 0;	// parse pixel value
                }
            }
            return 0;
        };

        // a reusable timer component
        // pass in a timeout interval in ms, after which callback is called
        // callback gets passed one argument, the elapsed time is ms
        var Timer = function(interval, callback) {
            var startTime;
            var startPauseTime;
            var totalPause = 0;
            var timeout;

            var run = function() {
                update(new Date().getTime());
                timeout = setTimeout(run, interval);
            };

            var update = function(now) {
                callback(now - totalPause - startTime);
            };

            // start the timer
            this.start = function() {
                if(startTime) return false;
                startTime = new Date().getTime();
                run();
            };

            // stop the timer
            this.stop = function() {
                if(!startTime) return false;
                clearTimeout(timeout);
                var now = new Date().getTime();
                if(startPauseTime) totalPause += now - startPauseTime;
                update(now);
                startTime = startPauseTime = undefined;
                totalPause = 0;
            };

            // pause the timer
            this.pause = function() {
                if(!startTime || startPauseTime) return false;
                clearTimeout(timeout);
                startPauseTime = new Date().getTime();
            };

            // resume the timer
            this.resume = function() {
                if(!startPauseTime) return false;
                totalPause += new Date().getTime() - startPauseTime;
                startPauseTime = undefined;
                run();
            };
        };


        // apply jqPuzzle to each image element within selection -------------------

        return this.filter('img').each(function(){
            var $srcImg = $(this);			// source image as jQuery object
            var lock = false;				// flag if animations are running
            var moves = 0;					// counter for single moves
            var seconds = 0;				// counter for seconds after first move
            var solved;						// flag if the puzzle is solved by the user
            var shuffled = settings.shuffle;// flag if the puzzle was shuffled
            var timer;						// a timer component

            // save the current hole position for further manipulation
            var currHole = hole;


            // create dummy elements to get computed css properties
            var $dummyPiece = $('<div/>').addClass('jqp-piece');
            var $dummyWrapper = $('<div/>').addClass('jqp-wrapper').append($dummyPiece);
            var $dummyGui = $('<div/>')
                .attr('class', $srcImg.attr('class') || '') // transfer classes
                .addClass('jqPuzzle')
                .append($dummyWrapper);

            // replace original image with dummy
            $srcImg.replaceWith($dummyGui);

            // assign old image id to dummy
            $dummyGui.attr('id', $srcImg.attr('id') || '');

            // get computed css properties of dummy elements
            var computedStyles = {
                gui: {
                    border: getBorderWidth($dummyGui),
                    padding: {
                        left: parseInt($dummyGui.css('padding-left')) || 0,
                        right: parseInt($dummyGui.css('padding-right')) || 0,
                        top: parseInt($dummyGui.css('padding-top')) || 0,
                        bottom: parseInt($dummyGui.css('padding-bottom')) || 0
                    }
                },
                wrapper: {
                    border: getBorderWidth($dummyWrapper),
                    padding: parseInt($dummyWrapper.css('padding-left')) || 0
                },
                piece: {
                    border: getBorderWidth($dummyPiece)
                }
            };

            // re-replace dummy elements with original image
            $dummyGui.removeAttr('id');
            $dummyGui.replaceWith($srcImg);


            // wait for the image to be loaded, to be able to get its real width/height
            $srcImg.one('load', function() {

                // overlap piece borders if there is no margin between pieces
                // this way, piece borders will not be doubled
                var overlap = (style.gridSize === 0 && style.overlap);

                // total space of piece borders and grid lines, which will cover parts of the image
                var coveredWidth  = cols*(2*computedStyles.piece.border) + (cols-1)*style.gridSize;
                var coveredHeight = rows*(2*computedStyles.piece.border) + (rows-1)*style.gridSize;

                // recalc if overlap
                if(overlap) {
                    coveredWidth  -= (cols-1)*computedStyles.piece.border;
                    coveredHeight -= (rows-1)*computedStyles.piece.border;
                }

                // make sure to get the original image size, not scaled values
                // in mozilla, width() and height() do not work with hidden elements
                $srcImg.css({width: 'auto', height: 'auto', visibility: 'visible'});

                // pieces width and height, based on original image size
                var width  = Math.floor(($srcImg.width()-coveredWidth) / cols);
                var height = Math.floor(($srcImg.height()-coveredHeight) / rows);

                // reject too small images
                if(width < 30 || height < 30) return false;

                // recalc full image width and height to avoid rounding errors
                var fullWidth  = cols*width + coveredWidth;
                var fullHeight = rows*height + coveredHeight;

                // image source path
                var imgSrc = $srcImg.attr('src');

                // total width/height of a piece (including piece border and 1 grid size)
                var totalPieceWidth  = width + 2*computedStyles.piece.border + style.gridSize;
                var totalPieceHeight = height + 2*computedStyles.piece.border + style.gridSize;

                // handle internet explorer quirks mode box model
                var boxModelHack = {
                    piece : $.boxModel ? 0 : 2*computedStyles.piece.border,
                    wrapper: $.boxModel ? 0 : 2*(computedStyles.wrapper.border + computedStyles.wrapper.padding),
                    gui: {
                        width: $.boxModel ? 0 : 2*computedStyles.gui.border +
                            computedStyles.gui.padding.left + computedStyles.gui.padding.right,
                        height: $.boxModel ? 0 : 2*computedStyles.gui.border +
                            computedStyles.gui.padding.top + computedStyles.gui.padding.bottom
                    }
                };


                // helper functions ------------------------------------------------

                // pixel offset of an element, based on matrix position
                var getOffset = function(row, col) {
                    var offset = {
                        left: computedStyles.wrapper.padding + col*totalPieceWidth,
                        top:  computedStyles.wrapper.padding + row*totalPieceHeight
                    };

                    if(overlap) {
                        offset.left -= col * computedStyles.piece.border;
                        offset.top  -= row * computedStyles.piece.border;
                    }

                    return offset;
                };

                // shuffle pieces
                var shuffle = function(rounds, speed) {

                    // when speed is defined, the function was triggered by a user event (button click)
                    if(speed) {
                        // do nothing, if disabled
                        if($shuffleButton.is('.jqp-disabled')) return false;

                        // do nothing, if locked
                        if(lock) return false;

                        // ask for confirmation
                        if(control.confirmShuffle && (moves > 0) &&
                        !window.confirm(texts.confirmShuffleMessage)) return false;

                        lock = true; // set lock

                        // if the puzzle is solved
                        if(solved) {
                            // reset gui
                            $gui.removeClass('jqp-solved');

                            // fade out original
                            $background.fadeTo(animation.fadeOriginalSpeed, style.backgroundOpacity, function() {
                                // opera gets kicked without remove()
                                $background.remove().prependTo($wrapper);

                                // re-enable all buttons
                                $buttons.removeClass('jqp-disabled');
                            });
                        }
                    }

                    // stop the timer
                    if(timer) timer.stop();

                    // reset flag and counters
                    solved = false;
                    shuffled = true;
                    moves = 0;
                    seconds = 0;

                    // reset display
                    if($display) $display.removeClass('jqp-disabled');
                    if($counter) $counter.val(moves);
                    if($timer) $timer.val(seconds);

                    var shuffles = [];
                    var i = 0;
                    // generate orders for several shuffle rounds
                    while(i < rounds) {
                        // create an array for choosing random positions
                        // based on its lenght, we can select free positions
                        var choices = [];
                        for(var j = 0; j < rows*cols; j++) {
                            choices[j] = j;
                        }
                        // remove element on initial hole position
                        choices.splice(hole, 1);

                        shuffles[i] = [];
                        // generate random numbers
                        for(var j = 0; j < rows*cols; j++) {

                            // but keep hole at initial position
                            if(j == hole) {
                                shuffles[i][j] = hole;
                                continue;
                            }

                            // select a random position based on the length of the choices
                            var randomIndex = Math.floor(Math.random()*choices.length);

                            // save the value at this index as the next number in the current order
                            shuffles[i][j] = choices[randomIndex];

                            // remove this value from the choices array (reducing its length)
                            choices.splice(randomIndex, 1);
                        }

                        // don't increase i if we are in last round
                        // and the generated order is not solvable
                        if(((i+1) < rounds) || checkOrder(shuffles[i])) i++;
                    }

                    var animCounter = 0; // animation counter for save unlock

                    // shuffle pieces in several rounds
                    for(var i = 0; i < rounds; i++) {

                        // set flag for the last round
                        var lastRound = ((i+1) == rounds);

                        // iterate over the generated orders
                        // with j being the linear index for the destination order
                        for(var j = 0; j < shuffles[i].length; j++) {

                            // we cannot move the hole
                            if(j == hole) {
                                // update hole position
                                if(lastRound) currHole = hole;
                                continue;
                            }

                            // the value is the index of the current piece
                            // in the original, ordered $pieces array
                            var pieceIndex = shuffles[i][j];

                            // since the hole is not saved in the $pieces array,
                            // adjust the index if it is bejond the hole position
                            if(pieceIndex > hole) pieceIndex -= 1;

                            // get the actual piece to be moved
                            var $piece = $pieces.eq(pieceIndex);

                            // get target position
                            var target = getMatrixPosition(j);

                            // get pixel offset new position
                            var offset = getOffset(target.row, target.col);

                            // update current row/cal in last round	(ie needs a string)
                            if(lastRound) $piece.attr('current', j.toString());

                            // either just set or animate styles
                            if(speed === undefined) {
                                $piece.css({left: offset.left, top: offset.top});
                            } else {
                                // animate!
                                $piece.animate({left: offset.left, top: offset.top}, speed, null, function() {
                                    // unlock after last animation in last round
                                    animCounter++;
                                    if(animCounter == animation.shuffleRounds*(rows*cols-1)) {
                                        lock = false;
                                        animCounter = 0;
                                    }
                                });
                            }
                        }
                    }
                };


                // create elements -------------------------------------------------

                // create a wrapper for the pieces
                var $wrapper = $('<div/>')
                    .addClass('jqp-wrapper')
                    .css({
                        width: fullWidth + boxModelHack.wrapper,
                        height: fullHeight + boxModelHack.wrapper,
                        borderWidth: computedStyles.wrapper.border,
                        padding: computedStyles.wrapper.padding,
                        margin: 0,
                        position: 'relative',
                        overflow: 'hidden',
                        display: 'block',
                        visibility: 'inherit'
                    });

                // create a single piece prototype to be cloned for the actual pieces
                var $protoPiece = $('<div/>')
                    .addClass('jqp-piece')
                    .css({
                        width: width + boxModelHack.piece,
                        height: height + boxModelHack.piece,
                        backgroundImage: 'url(' + imgSrc + ')',
                        borderWidth: computedStyles.piece.border,
                        margin: 0,
                        padding: 0,
                        position: 'absolute',
                        overflow: 'hidden',
                        display: 'block',
                        visibility: 'inherit',
                        cursor: 'default'
                    })
                    .append($('<span/>')); // will hold the numbers

                // create pieces inside wrapper
                var $pieces = $([]); // create an empty jQuery object
                for(var i = 0; i < rows; i++) {
                    for(var j = 0; j < cols; j++) {
                        var index = getLinearPosition(i,j); // linear index

                        // do not create piece at initial hole position
                        if(index == hole) continue;

                        // get piece position offset
                        var offset = getOffset(i,j);

                        // calculate background offset
                        var bgLeft = -1 * (j*totalPieceWidth + computedStyles.piece.border);
                        var bgTop  = -1 * (i*totalPieceHeight + computedStyles.piece.border);

                        // recalc if overlap
                        if(overlap) {
                            bgLeft += j*computedStyles.piece.border;
                            bgTop  += i*computedStyles.piece.border;
                        }

                        // create single pieces from prototype
                        $pieces = $pieces.add($protoPiece.clone()
                            .css({
                                left: offset.left,
                                top: offset.top,
                                backgroundPosition: (bgLeft + 'px ' + bgTop + 'px')
                            })
                            // add expando property to save the current position
                            .attr('current', String(index)) // ie hack: String()
                            .appendTo($wrapper)
                            // add number to inner span
                            .children().text(index + 1).end()
                        );
                    }
                }

                // initially shuffle pieces
                if(settings.shuffle) shuffle(1);

                // create background (original image) inside wrapper
                var $background = $('<div/>')
                    .css({
                        width: fullWidth,
                        height: fullHeight,
                        left: computedStyles.wrapper.padding,
                        top: computedStyles.wrapper.padding,
                        backgroundImage: 'url(' + imgSrc + ')',
                        borderWidth: 0,
                        margin: 0,
                        padding: 0,
                        position: 'absolute',
                        opacity: style.backgroundOpacity
                    })
                    .prependTo($wrapper);

                // create controls which will hold the buttons and the display
                    var $controls = $('<div/>')
                        .addClass('jqp-controls')
                        .css({
                            width: fullWidth + boxModelHack.wrapper,
                            height: fullHeight + boxModelHack.wrapper,
                            borderWidth: computedStyles.wrapper.border,
                            padding: computedStyles.wrapper.padding,
                            position: 'absolute',
                            overflow: 'hidden',
                            display: 'block',
                            visibility: 'inherit',
                            'z-index': '200'
                        })
                        .prependTo($wrapper);

                var $shuffleButton, $originalButton, $numbersButton;

                // create a button prototype to be cloned for the actual buttons
                var $protoButton = $('<a/>').css('cursor', 'default');

                // create shuffle button
                if(control.shufflePieces) {
                    $shuffleButton = $protoButton.clone()
                        .text(texts.shuffleLabel)
                        .appendTo($controls);
                }

                // create toggle original button
                if(control.toggleOriginal) {
                    $originalButton = $protoButton.clone()
                        .text(texts.toggleOriginalLabel)
                        .appendTo($controls);
                }

                // create toggle numbers button
                if(control.toggleNumbers) {
                    $numbersButton = $protoButton.clone()
                        .text(texts.toggleNumbersLabel)
                        .appendTo($controls);
                    // immediately toggle button, if numbers are initially shown
                    if(settings.numbers) $numbersButton.addClass('jqp-toggle');
                }

                // keep a reference to all buttons for convenience
                var $buttons = $controls.children();

                var $display, $counter, $timer;
                if(control.counter || control.timer) {

                    // create wrapper for counter/timer
                    $display = $('<span/>')
                        .css('cursor', 'default')
                        .appendTo($controls);

                    // create a text field prototype to be cloned for actual text fields
                    var $protoField = $('<input/>')
                        .val(0)
                        .css({
                            width: '5ex',
                            cursor: 'default'
                        })
                        .attr('readonly', 'readonly');

                    // create counter component
                    if(control.counter)	$counter = $protoField.clone()
                        .appendTo($display)
                        .after(texts.movesLabel + ' ');

                    // create timer component
                    if(control.timer) $timer = $protoField.clone()
                        .appendTo($display)
                        .after(texts.secondsLabel);

                    // disable display if the puzzle is not shuffled yet
                    if(!settings.shuffle) $display.addClass('jqp-disabled');
                }

                // add link to jqPuzzle homepage
                var $credits = $('<a/>')
                    .text('jqPuzzle')
                    .attr('href', 'http://www.2meter3.de/jqPuzzle/')
                    .css({
                        'float': 'right',
                        fontFamily: 'Verdana, Arial, Helvetica, sans-serif',
                        fontSize: '9px',
                        lineHeight: '12px',
                        textDecoration: 'none',
                        color: '#FFFFFF',
                        backgroundColor: '#777777',
                        backgroundImage: 'none',
                        borderBottom: '1px dotted #FFFFFF',
                        padding: '1px 3px 2px',
                        marginRight: computedStyles.wrapper.border,
                        position: 'static',
                        display: 'none',
                        visibility: 'inherit'
                    });

                // panel which holds controls and credits, used for height() calculations
                var $panel = $('<div/>')
                    .css({
                        width: fullWidth + 2*(computedStyles.wrapper.padding + computedStyles.wrapper.border),
                        position: 'absolute',
    //                    left: '-52.78%',
                        display: 'block',
                        visibility: 'inherit',//'visible',
                        'margin-top': '-134px',
    //					padding: '128.6px',
                        backgroundColor: 'yellow',
    // change background to transparent
                    })
                    .append($credits).append($controls);

                // full gui (including wrapper and panel)
                var $gui = $('<div/>')
                    .attr('class', $srcImg.attr('class') || '') // transfer classes
                    .addClass('jqPuzzle') // always assign class jqPuzzle
                    .css({
                        width: fullWidth + 2*(computedStyles.wrapper.padding + computedStyles.wrapper.border) + boxModelHack.gui.width,
                        height: fullHeight + 2*(computedStyles.wrapper.padding + computedStyles.wrapper.border) + boxModelHack.gui.height,
                        textAlign: 'left',
                        overflow: 'hidden',
                        display: 'block'
                    })
                    .append($wrapper).append($panel);

                // replace source image with jqPuzzle
                $srcImg.replaceWith($gui);

                // assign source image id to jqPuzzle
                var id = $srcImg.attr('id');
                if(id) $gui.attr('id', id);

                // opera has strange effect when calling hide() and val() before
                // the elements are attached to the dom
                // hide numbers
                if(!settings.numbers) $pieces.children().hide();
                // fill inputs
                if($display) $display.children('input').val(0);

                // now, after everything is rendered, recalc gui height
                var guiHeight = $gui.height();
                var panelHeight = $panel.height();

                $gui.height($gui.height() + $panel.height());


                // attach events ---------------------------------------------------

                // prevent text selection
                if($.browser.msie) $gui[0].onselectstart = function() { return false; };
                else  $gui.mousedown(function() { return false; });

                // button press on mousedown
                $buttons.mousedown(function() {
                    if(!$(this).is('.jqp-disabled')) $(this).addClass('jqp-down');
                });
                $buttons.mouseout(function() {
                    $(this).removeClass('jqp-down');
                });
                $buttons.mouseup(function() {
                    $(this).removeClass('jqp-down');
                });

                // swap pieces on click
                $pieces.click(function() {
                    // do nothing, if locked
                    if(lock) return false;

                    // do nothing, if solved after being shuffled
                    if(solved) return false;

                    lock = true; // set lock

                    var $piece = $(this);

                    // get current position from expando
                    var current = $piece.attr('current');

                    // get current matrix positions for piece and hole
                    var source = getMatrixPosition(current);
                    var dest = getMatrixPosition(currHole);

                    // only swap pieces adjacent to the hole
                    if(Math.abs(source.row - dest.row) + Math.abs(source.col - dest.col) != 1) {
                            lock = false;
                            return false;
                        }

                    // get offset for the new position
                    var offset = getOffset(dest.row, dest.col);

                    // update piece expando and current hole position
                    $piece.attr('current', String(currHole)); // ie hack: String()
                    currHole = current;

                    // increase moves counter only if the puzzle was shuffled
                    if(shuffled) moves++;

                    // update counter field
                    if($counter) $counter.val(moves);

                    // start timer, if needed
                    if(moves == 1) {
                        // initiate timer with update function
                        if(!timer) timer = new Timer(333, function(ms) {
                            seconds = Math.floor(ms/1000);
                            if($timer) $timer.val(seconds);
                        });
                        timer.start();
                    }

                    // animate!
                    $piece.animate({left: offset.left, top: offset.top}, animation.slidingSpeed, null, function() {
                        // only check if the puzzle was shuffled
                        if(shuffled) {
                            // check if the puzzle is solved
                            solved = checkSolution($pieces);
                            if(solved) {
                                if(timer) timer.stop();
                                shuffled = false;
                                $gui.addClass('jqp-solved');
                                window.setTimeout(finishGame, 100);
                            }
                            else lock = false;
                        }
                        else lock = false;
                    });
                });

                // shuffle pieces on click
                if(control.shufflePieces) $shuffleButton.click(function() {
                    shuffle(animation.shuffleRounds, animation.shuffleSpeed);
                    $shuffleButton.fadeOut(0);
    console.log('shuffle button display none');
                    $controls.fadeOut(0);
    console.log('controls display none');
                    });

                // toggle original on click
                if(control.toggleOriginal) $originalButton.click(function() {
                    // do nothing, if disabled
                    if($originalButton.is('.jqp-disabled')) return false;

                    // do nothing, if locked
                    if(lock) return false;

                    lock = true; // set lock

                    if($originalButton.is('.jqp-toggle')) {
                        // re-enable other buttons
                        if(control.shufflePieces) $shuffleButton.removeClass('jqp-disabled');
                        if(control.toggleNumbers) $numbersButton.removeClass('jqp-disabled');

                        $originalButton.removeClass('jqp-toggle');

                        // fade out original
                        $background.fadeTo(animation.fadeOriginalSpeed, style.backgroundOpacity, function() {
                            $(this).prependTo($wrapper);

                            // resume timer
                            if(control.pauseTimer && timer) timer.resume();

                            lock = false;
                        });
                    } else {
                        // disable other buttons
                        if(control.shufflePieces) $shuffleButton.addClass('jqp-disabled');
                        if(control.toggleNumbers) $numbersButton.addClass('jqp-disabled');

                        $originalButton.addClass('jqp-toggle');

                        // pause timer
                        if(control.pauseTimer && timer) timer.pause();

                        // fade in original
                        $background.appendTo($wrapper).fadeTo(animation.fadeOriginalSpeed, 1, function() {

                            lock = false;
                        });
                    }
                    return false; // prevent default action
                });

                // toggle numbers on click
                if(control.toggleNumbers) $numbersButton.click(function() {
                    // do nothing, if disabled
                    if($numbersButton.is('.jqp-disabled')) return false;

                    if ($numbersButton.is('.jqp-toggle')) {
                        $numbersButton.removeClass('jqp-toggle');
                        $pieces.children().hide();
                    } else {
                        $numbersButton.addClass('jqp-toggle');
                        $pieces.children().show();
                    }
                });


    // work to do when the puzzle is solved
                var finishGame = function() {
                    if(success.fadeOriginal) {
                        // disable buttons
                        if(control.toggleOriginal) $originalButton.addClass('jqp-disabled');
                        if(control.toggleNumbers) $numbersButton.addClass('jqp-disabled');

                        // fade in original
                        $background.appendTo($wrapper).fadeTo(animation.fadeOriginalSpeed, 1.0, function() {
                            lock = false; // reset lock
                            solutionCallback(); // call user callback


                        $gui.invisible(0);
    //                    $gui.css('z-index', '-300');
    //                    $wrapper.css('z-index', 'inherit');


                        });
                    } else {
                        lock = false; // reset lock
                        solutionCallback(); // call user callback
                    }
                };

                // call a user-defined callback after a timeout, when the puzzle is solved
                var solutionCallback = function() {
                    if($.isFunction(success.callback)) {
                        setTimeout(function() {
                            success.callback({moves: moves, seconds: seconds});
                        }, success.callbackTimeout);
                    }
                };

            }); // img load

            var interval = setInterval(function() {
                if($srcImg[0].complete) {
                    clearInterval(interval);
                    $srcImg.trigger('load');
                }
            }, 333);

        }).end(); // return full collection to allow chaining
    };

    // automagically apply jqPuzzle to all images with class 'jqPuzzle'
    $(document).ready(function() {

        $('img.jqPuzzle').each(function() {

            var microFormat = /\bjqp(-[a-z]{2})?-r(\d)-c(\d)(-h(\d+))?(-s(\d+))?(-[A-Z]+)?\b/;

            // execute regex and save matches
            var match = microFormat.exec(this.className);

            // build settings object from micro format
            var settings;
            if(match) {
                settings = {
                    rows: parseInt(match[2]),
                    cols: parseInt(match[3]),
                    hole: parseInt(match[5]) || null,
                    shuffle: match[8] && match[8].indexOf('S') != -1,
                    numbers: match[8] ? match[8].indexOf('N') == -1 : true,
                    language: match[1] && match[1].substring(1)
                };

                if(match[7]) {
                    settings.animation = {};
                    settings.animation.shuffleRounds = parseInt(match[7]);
                }

                if(match[8] && match[8].search(/[ABCDE]/) != -1) {
                    settings.control = 	{};
                    settings.control.shufflePieces = match[8].indexOf('A') == -1;
                    settings.control.toggleOriginal = match[8].indexOf('B') == -1;
                    settings.control.toggleNumbers = match[8].indexOf('C') == -1;
                    settings.control.counter = match[8].indexOf('D') == -1;
                    settings.control.timer = match[8].indexOf('E') == -1;
                }
            }
            // call the plugin
            $(this).jqPuzzle(settings);
        });
    });

    })(jQuery);
    </script>


    <!--    PUZZLE SECRET REVEAL       -->
    <script type="text/javascript">
    $(function() {
        $('.docum-ready-cover').mouseenter(function(){
            console.log('mouse enters docum-ready-cover');
            $('.docum-ready-cover').fadeOut(600);
            console.log('docum-ready-cover fades out');
        });
    });
    </script>

    <!--move first, then after gifs come forward fade out-->
    <script type="text/javascript">
    $(function() {
        $('#play-video').on('click', function(ev) {
            console.log('play-video is clicked');
            $("#video")[0].src += "&autoplay=1";
            console.log('video set to autoplay');
            ev.preventDefault();
            $('.eclipse_picture').css("cursor", "none");
            console.log('change cursor to none for eclipse_picture');
            $("#play-video, #video").css("left", "-400px");
            console.log('play-video and video move');
                setTimeout(function () {
                console.log('timeout 1 set');
                    $('.eclipse_picture').addClass('eclipse_disappear');
                    console.log('eclipse moves back');
                    $('.mog_gifs').addClass('show_gifs');
                    console.log('gifs come forward');
                }, 550);
                console.log('timeout 1 completed');
                setTimeout(function () {
                console.log('timeout 2 set');
                    $("#video")[0].src -= "&autoplay=1";
                    console.log('autoplay off');
                }, 5200);
                console.log('timeout 2 completed');
            $('#play-video, #video').fadeOut(450);
            console.log('play-video and video hide');
        });
    });
    </script>
       
  </body>

</html>
